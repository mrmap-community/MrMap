{
  "openapi": "3.0.2",
  "info": {
    "title": "MrMap JSON:API",
    "version": "1.0.0",
    "description": "API for all things …"
  },
  "paths": {
    "/api/v1/registry/wms/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebMapService"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/",
        "description": "",
        "parameters": [],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "get_capabilities_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "the capabilities url of the ogc service",
                            "maxLength": 4096,
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          },
                          "collect_metadata_records": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "get_capabilities_url"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "service_auth": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapServiceCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "access_constraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource."
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource."
                          },
                          "use_limitation": {
                            "type": "string",
                            "nullable": true
                          },
                          "license_source_note": {
                            "type": "string",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          },
                          "get_capabilities_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "the capabilities url of the ogc service",
                            "maxLength": 4096,
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layers": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "metadata_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "created_by": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "last_modified_by": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "licence": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service}/layers/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_service}/layers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_service}/layers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Layer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_service}/layers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "bbox_lat_lon": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          }
                        },
                        "required": [
                          "bbox_lat_lon",
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "styles": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "bbox_lat_lon": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "styles": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContact"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "maxLength": 256
                          },
                          "person_name": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "maxLength": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "maxLength": 256
                          },
                          "person_name": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "maxLength": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContact"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "maxLength": 256
                          },
                          "person_name": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "maxLength": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "maxLength": 256
                          },
                          "person_name": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "maxLength": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/": {
      "get": {
        "operationId": "List/api/v1/registry/layers/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/layers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Layer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/layers/",
        "description": "",
        "parameters": [],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "bbox_lat_lon": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          }
                        },
                        "required": [
                          "bbox_lat_lon",
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "styles": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "bbox_lat_lon": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "styles": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/styles/": {
      "get": {
        "operationId": "List/api/v1/registry/layers/{parent_lookup_layer}/styles/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/layers/{parent_lookup_layer}/styles/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Style"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/layers/{parent_lookup_layer}/styles/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/layers/{parent_lookup_layer}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/layers/{parent_lookup_layer}/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/layers/{parent_lookup_layer}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/": {
      "get": {
        "operationId": "List/api/v1/registry/wfs/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wfs/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebFeatureService"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wfs/",
        "description": "",
        "parameters": [],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "get_capabilities_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "the capabilities url of the ogc service",
                            "maxLength": 4096,
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          },
                          "collect_metadata_records": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "get_capabilities_url"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "service_auth": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureServiceCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wfs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wfs/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wfs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "access_constraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource."
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource."
                          },
                          "use_limitation": {
                            "type": "string",
                            "nullable": true
                          },
                          "license_source_note": {
                            "type": "string",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          },
                          "get_capabilities_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "the capabilities url of the ogc service",
                            "maxLength": 4096,
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "featuretypes": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "licence": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "service_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "metadata_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wfs/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wfs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/": {
      "get": {
        "operationId": "List/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureType"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          },
                          "describe_feature_type_document": {
                            "type": "string",
                            "nullable": true,
                            "description": "the fetched content of the download describe feature type document."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "output_formats": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          },
                          "describe_feature_type_document": {
                            "type": "string",
                            "nullable": true,
                            "description": "the fetched content of the download describe feature type document."
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "output_formats": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/": {
      "get": {
        "operationId": "List/api/v1/registry/featuretypes/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/featuretypes/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureType"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/featuretypes/",
        "description": "",
        "parameters": [],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          },
                          "describe_feature_type_document": {
                            "type": "string",
                            "nullable": true,
                            "description": "the fetched content of the download describe feature type document."
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "output_formats": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
                          },
                          "describe_feature_type_document": {
                            "type": "string",
                            "nullable": true,
                            "description": "the fetched content of the download describe feature type document."
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "service": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "output_formats": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/": {
      "get": {
        "operationId": "List/api/v1/registry/mapcontexts/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/mapcontexts/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MapContextDefault"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontexts/",
        "description": "",
        "parameters": [],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this map context",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the topic of this map context"
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "map_context_layers": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextDefault"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontexts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontexts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextDefault"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/mapcontexts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this map context",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the topic of this map context"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "map_context_layers": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/mapcontexts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextDefault"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontexts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/": {
      "get": {
        "operationId": "List/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MapContextLayer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "maxLength": 1000
                          },
                          "title": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short descriptive title for this map context layer",
                            "maxLength": 1000
                          },
                          "layer_scale_min": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "layer_scale_max": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "map_context": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "dataset_metadata": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "rendering_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "layer_style": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "selection_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "maxLength": 1000
                          },
                          "title": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short descriptive title for this map context layer",
                            "maxLength": 1000
                          },
                          "layer_scale_min": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "layer_scale_max": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "map_context": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "dataset_metadata": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "rendering_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "layer_style": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "selection_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/": {
      "get": {
        "operationId": "List/api/v1/registry/mapcontextlayers/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/mapcontextlayers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MapContextLayer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontextlayers/",
        "description": "",
        "parameters": [],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "maxLength": 1000
                          },
                          "title": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short descriptive title for this map context layer",
                            "maxLength": 1000
                          },
                          "layer_scale_min": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "layer_scale_max": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "map_context": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "dataset_metadata": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "rendering_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "layer_style": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "selection_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "maxLength": 1000
                          },
                          "title": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short descriptive title for this map context layer",
                            "maxLength": 1000
                          },
                          "layer_scale_min": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "layer_scale_max": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "parent": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "map_context": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "dataset_metadata": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "rendering_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "layer_style": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "selection_layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/keywords/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/keywords/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "maxLength": 255
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/styles/": {
      "get": {
        "operationId": "List/api/v1/registry/styles/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/styles/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Style"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/styles/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/styles/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "$ref": "#/components/schemas/reltoone"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/dataset-metadata/": {
      "get": {
        "operationId": "List/api/v1/registry/dataset-metadata/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keywords.keyword]",
            "required": false,
            "in": "query",
            "description": "keywords__keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keywords.keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keywords__keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keywords.keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keywords__keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/dataset-metadata/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DatasetMetadata"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/dataset-metadata/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "access_constraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource."
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource."
                          },
                          "use_limitation": {
                            "type": "string",
                            "nullable": true
                          },
                          "license_source_note": {
                            "type": "string",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "spatial_res_type": {
                            "enum": [
                              "groundDistance",
                              "scaleDenominator"
                            ],
                            "type": "string",
                            "nullable": true,
                            "description": "Ground resolution in meter or the equivalent scale."
                          },
                          "spatial_res_value": {
                            "type": "number",
                            "nullable": true,
                            "description": "The value depending on the selected resolution type."
                          },
                          "format": {
                            "enum": [
                              null,
                              "Database",
                              "Esri shape",
                              "CSV",
                              "GML",
                              "GeoTIFF"
                            ],
                            "nullable": true,
                            "description": "The format in which the described dataset is stored."
                          },
                          "charset": {
                            "enum": [
                              null,
                              "utf8"
                            ],
                            "nullable": true,
                            "description": "The charset which is used by the stored data."
                          },
                          "inspire_top_consistence": {
                            "type": "boolean",
                            "description": "Flag to signal if the described data has a topologically consistence."
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          },
                          "lineage_statement": {
                            "type": "string",
                            "nullable": true
                          },
                          "update_frequency_code": {
                            "enum": [
                              "annually",
                              "asNeeded",
                              "biannually",
                              "irregular",
                              "notPlanned",
                              "unknown"
                            ],
                            "type": "string",
                            "nullable": true
                          },
                          "bounding_geometry": {
                            "type": "string",
                            "nullable": true
                          },
                          "dataset_id": {
                            "type": "string",
                            "nullable": true,
                            "description": "identifier of the remote data",
                            "maxLength": 4096
                          },
                          "dataset_id_code_space": {
                            "type": "string",
                            "description": "code space for the given identifier",
                            "maxLength": 4096
                          },
                          "inspire_interoperability": {
                            "type": "boolean",
                            "description": "flag to signal if this "
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "licence": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "dataset_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "metadata_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "self_pointing_layers": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "self_pointing_feature_types": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "self_pointing_catalouge_service": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DatasetMetadata"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/dataset-metadata/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/dataset-metadata/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this dataset metadata.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keywords.keyword]",
            "required": false,
            "in": "query",
            "description": "keywords__keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keywords.keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keywords__keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keywords.keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keywords__keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/dataset-metadata/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DatasetMetadata"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/dataset-metadata/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this dataset metadata.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "access_constraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource."
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource."
                          },
                          "use_limitation": {
                            "type": "string",
                            "nullable": true
                          },
                          "license_source_note": {
                            "type": "string",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata."
                          },
                          "insufficient_quality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO"
                          },
                          "is_searchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api"
                          },
                          "spatial_res_type": {
                            "enum": [
                              "groundDistance",
                              "scaleDenominator"
                            ],
                            "type": "string",
                            "nullable": true,
                            "description": "Ground resolution in meter or the equivalent scale."
                          },
                          "spatial_res_value": {
                            "type": "number",
                            "nullable": true,
                            "description": "The value depending on the selected resolution type."
                          },
                          "format": {
                            "enum": [
                              null,
                              "Database",
                              "Esri shape",
                              "CSV",
                              "GML",
                              "GeoTIFF"
                            ],
                            "nullable": true,
                            "description": "The format in which the described dataset is stored."
                          },
                          "charset": {
                            "enum": [
                              null,
                              "utf8"
                            ],
                            "nullable": true,
                            "description": "The charset which is used by the stored data."
                          },
                          "inspire_top_consistence": {
                            "type": "boolean",
                            "description": "Flag to signal if the described data has a topologically consistence."
                          },
                          "preview_image": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true
                          },
                          "lineage_statement": {
                            "type": "string",
                            "nullable": true
                          },
                          "update_frequency_code": {
                            "enum": [
                              "annually",
                              "asNeeded",
                              "biannually",
                              "irregular",
                              "notPlanned",
                              "unknown"
                            ],
                            "type": "string",
                            "nullable": true
                          },
                          "bounding_geometry": {
                            "type": "string",
                            "nullable": true
                          },
                          "dataset_id": {
                            "type": "string",
                            "nullable": true,
                            "description": "identifier of the remote data",
                            "maxLength": 4096
                          },
                          "dataset_id_code_space": {
                            "type": "string",
                            "description": "code space for the given identifier",
                            "maxLength": 4096
                          },
                          "inspire_interoperability": {
                            "type": "boolean",
                            "description": "flag to signal if this "
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "licence": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "dataset_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "metadata_contact": {
                            "$ref": "#/components/schemas/reltoone"
                          },
                          "keywords": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "reference_systems": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "self_pointing_layers": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "self_pointing_feature_types": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "self_pointing_catalouge_service": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/dataset-metadata/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DatasetMetadata"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/dataset-metadata/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this dataset metadata.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/metadata-contacts/": {
      "get": {
        "operationId": "List/api/v1/registry/metadata-contacts/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/metadata-contacts/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContact"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/metadata-contacts/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "maxLength": 256
                          },
                          "person_name": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "maxLength": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/metadata-contacts/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/metadata-contacts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/metadata-contacts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/metadata-contacts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "maxLength": 256
                          },
                          "person_name": {
                            "type": "string",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "maxLength": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/metadata-contacts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/metadata-contacts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{layer_pk}/service": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{layer_pk}/service",
        "description": "",
        "parameters": [
          {
            "name": "layer_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bbox_lat_lon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{layer_pk}/service",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/wms/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/layers/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wfs/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/wfs/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{id}relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/": {
      "get": {
        "operationId": "List/api/v1/accounts/users/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/users/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/",
        "description": "",
        "parameters": [],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                            "pattern": "^[\\w.@+-]+\\z",
                            "maxLength": 150
                          },
                          "password": {
                            "type": "string",
                            "maxLength": 128
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/users/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "last_login": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "is_superuser": {
                            "type": "boolean",
                            "description": "Designates that this user has all permissions without explicitly assigning them."
                          },
                          "username": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                            "pattern": "^[\\w.@+-]+\\z",
                            "maxLength": 150
                          },
                          "first_name": {
                            "type": "string",
                            "maxLength": 150
                          },
                          "last_name": {
                            "type": "string",
                            "maxLength": 150
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "maxLength": 254
                          },
                          "is_staff": {
                            "type": "boolean",
                            "description": "Designates whether the user can log into this admin site."
                          },
                          "is_active": {
                            "type": "boolean",
                            "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                          },
                          "date_joined": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "confirmed_newsletter": {
                            "type": "boolean"
                          },
                          "confirmed_survey": {
                            "type": "boolean"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "$ref": "#/components/schemas/reltomany"
                          },
                          "user_permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/users/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/groups/": {
      "get": {
        "operationId": "List/api/v1/accounts/users/{parent_lookup_user}/groups/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/users/{parent_lookup_user}/groups/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/{parent_lookup_user}/groups/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/organizations/": {
      "get": {
        "operationId": "List/api/v1/accounts/users/{parent_lookup_user}/organizations/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[user_has_perm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/users/{parent_lookup_user}/organizations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/{parent_lookup_user}/organizations/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          },
                          "person_name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[user_has_perm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          },
                          "person_name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/groups/": {
      "get": {
        "operationId": "List/api/v1/accounts/groups/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/groups/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/groups/",
        "description": "",
        "parameters": [],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/groups/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/organizations/": {
      "get": {
        "operationId": "List/api/v1/accounts/organizations/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[user_has_perm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/organizations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/organizations/",
        "description": "",
        "parameters": [],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          },
                          "person_name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/organizations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[user_has_perm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 150
                          },
                          "person_name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "postal_code": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address_type": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "state_or_province": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "$ref": "#/components/schemas/reltomany"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/permissions/": {
      "get": {
        "operationId": "List/api/v1/accounts/permissions/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename]",
            "required": false,
            "in": "query",
            "description": "codename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename.icontains]",
            "required": false,
            "in": "query",
            "description": "codename__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/permissions/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Permission"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/permissions/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/permissions/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this permission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename]",
            "required": false,
            "in": "query",
            "description": "codename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename.icontains]",
            "required": false,
            "in": "query",
            "description": "codename__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/permissions/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Permission"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/accounts/users/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notify/task-results/": {
      "get": {
        "operationId": "List/api/v1/notify/task-results/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[task_name]",
            "required": false,
            "in": "query",
            "description": "task_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[task_name.icontains]",
            "required": false,
            "in": "query",
            "description": "task_name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[task_name.contains]",
            "required": false,
            "in": "query",
            "description": "task_name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status]",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string",
              "enum": [
                "FAILURE",
                "PENDING",
                "RECEIVED",
                "RETRY",
                "REVOKED",
                "STARTED",
                "SUCCESS"
              ]
            }
          },
          {
            "name": "filter[date_created]",
            "required": false,
            "in": "query",
            "description": "date_created",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_created.gt]",
            "required": false,
            "in": "query",
            "description": "date_created__gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_created.lt]",
            "required": false,
            "in": "query",
            "description": "date_created__lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_created.range]",
            "required": false,
            "in": "query",
            "description": "date_created__range",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/notify/task-results/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResult"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notify/task-results/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/notify/task-results/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this task result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[task_name]",
            "required": false,
            "in": "query",
            "description": "task_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[task_name.icontains]",
            "required": false,
            "in": "query",
            "description": "task_name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[task_name.contains]",
            "required": false,
            "in": "query",
            "description": "task_name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status]",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string",
              "enum": [
                "FAILURE",
                "PENDING",
                "RECEIVED",
                "RETRY",
                "REVOKED",
                "STARTED",
                "SUCCESS"
              ]
            }
          },
          {
            "name": "filter[date_created]",
            "required": false,
            "in": "query",
            "description": "date_created",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_created.gt]",
            "required": false,
            "in": "query",
            "description": "date_created__gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_created.lt]",
            "required": false,
            "in": "query",
            "description": "date_created__lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[date_created.range]",
            "required": false,
            "in": "query",
            "description": "date_created__range",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/notify/task-results/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/move_to/": {
      "post": {
        "operationId": "move_to/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/move_to/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "target": {
                            "type": "integer"
                          },
                          "position": {
                            "enum": [
                              "first-child",
                              "last-child",
                              "left",
                              "right"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "target",
                          "position"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayerMoveLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/{id}/move_to/": {
      "post": {
        "operationId": "move_to/api/v1/registry/mapcontextlayers/{id}/move_to/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "target": {
                            "type": "integer"
                          },
                          "position": {
                            "enum": [
                              "first-child",
                              "last-child",
                              "left",
                              "right"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "target",
                          "position"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayerMoveLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/login/": {
      "post": {
        "operationId": "create/api/v1/accounts/login/",
        "description": "",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string",
                            "writeOnly": true
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Login"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/logout/": {
      "post": {
        "operationId": "create/api/v1/accounts/logout/",
        "description": "",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/components/schemas/type"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "$ref": "#/components/schemas/link"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Logout"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "jsonapi": {
        "type": "object",
        "description": "The server's implementation",
        "properties": {
          "version": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "additionalProperties": false
      },
      "resource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "attributes": {
            "type": "object"
          },
          "relationships": {
            "type": "object"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "link": {
        "oneOf": [
          {
            "description": "a string containing the link's URL",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "a string containing the link's URL",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            }
          }
        ]
      },
      "links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        }
      },
      "reltoone": {
        "description": "a singular 'to-one' relationship",
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/relationshipLinks"
          },
          "data": {
            "$ref": "#/components/schemas/relationshipToOne"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "relationshipToOne": {
        "description": "reference to other resource in a to-one relationship",
        "anyOf": [
          {
            "$ref": "#/components/schemas/nulltype"
          },
          {
            "$ref": "#/components/schemas/linkage"
          }
        ]
      },
      "reltomany": {
        "description": "a multiple 'to-many' relationship",
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/relationshipLinks"
          },
          "data": {
            "$ref": "#/components/schemas/relationshipToMany"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "relationshipLinks": {
        "description": "optional references to other resource objects",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "self": {
            "$ref": "#/components/schemas/link"
          },
          "related": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "relationshipToMany": {
        "description": "An array of objects each containing the 'type' and 'id' for to-many relationships",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/linkage"
        },
        "uniqueItems": true
      },
      "ResourceIdentifierObject": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/relationshipToOne"
          },
          {
            "$ref": "#/components/schemas/relationshipToMany"
          }
        ]
      },
      "linkage": {
        "type": "object",
        "description": "the 'type' and 'id'",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "pagination": {
        "type": "object",
        "properties": {
          "first": {
            "$ref": "#/components/schemas/pageref"
          },
          "last": {
            "$ref": "#/components/schemas/pageref"
          },
          "prev": {
            "$ref": "#/components/schemas/pageref"
          },
          "next": {
            "$ref": "#/components/schemas/pageref"
          }
        }
      },
      "pageref": {
        "oneOf": [
          {
            "type": "string",
            "format": "uri-reference"
          },
          {
            "$ref": "#/components/schemas/nulltype"
          }
        ]
      },
      "failure": {
        "type": "object",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/errors"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/jsonapi"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          }
        }
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/error"
        },
        "uniqueItems": true
      },
      "error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A [JSON Pointer](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document [e.g. `/data` for a primary data object, or `/data/attributes/title` for a specific attribute."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            }
          }
        }
      },
      "onlymeta": {
        "additionalProperties": false,
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "meta": {
        "type": "object",
        "additionalProperties": true
      },
      "datum": {
        "description": "singular item",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/resource"
          }
        }
      },
      "nulltype": {
        "type": "object",
        "nullable": true,
        "default": null
      },
      "type": {
        "type": "string",
        "description": "The [type](https://jsonapi.org/format/#document-resource-object-identification) member is used to describe resource objects that share common attributes and relationships."
      },
      "id": {
        "type": "string",
        "description": "Each resource object’s type and id pair MUST [identify](https://jsonapi.org/format/#document-resource-object-identification) a single, unique resource."
      },
      "WebMapService": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "created_at": {
                "type": "string",
                "readOnly": true
              },
              "last_modified_at": {
                "type": "string",
                "readOnly": true
              },
              "is_accessible": {
                "type": "string",
                "readOnly": true
              },
              "xml_backup_file": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field."
              },
              "access_constraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource."
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource."
              },
              "use_limitation": {
                "type": "string",
                "nullable": true
              },
              "license_source_note": {
                "type": "string",
                "nullable": true
              },
              "date_stamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used."
              },
              "file_identifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml."
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from."
              },
              "origin_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata."
              },
              "is_broken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO"
              },
              "is_customized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True"
              },
              "insufficient_quality": {
                "type": "string",
                "nullable": true,
                "description": "TODO"
              },
              "is_searchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client"
              },
              "is_active": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
              },
              "version": {
                "type": "string",
                "readOnly": true,
                "description": "the version of the service type as sem version"
              },
              "service_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the base url of the service",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "get_capabilities_url": {
                "type": "string",
                "format": "uri",
                "description": "the capabilities url of the ogc service",
                "maxLength": 4096,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              }
            },
            "required": [
              "title",
              "get_capabilities_url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "layers": {
                "$ref": "#/components/schemas/reltomany"
              },
              "service_contact": {
                "$ref": "#/components/schemas/reltoone"
              },
              "metadata_contact": {
                "$ref": "#/components/schemas/reltoone"
              },
              "keywords": {
                "$ref": "#/components/schemas/reltomany"
              },
              "created_by": {
                "$ref": "#/components/schemas/reltoone"
              },
              "last_modified_by": {
                "$ref": "#/components/schemas/reltoone"
              },
              "licence": {
                "$ref": "#/components/schemas/reltoone"
              }
            }
          }
        }
      },
      "Layer": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true
              },
              "bbox_lat_lon": {
                "type": "string"
              },
              "xml_backup_file": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field."
              },
              "date_stamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used."
              },
              "file_identifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml."
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from."
              },
              "origin_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata."
              },
              "is_broken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO"
              },
              "is_customized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True"
              },
              "insufficient_quality": {
                "type": "string",
                "nullable": true,
                "description": "TODO"
              },
              "is_searchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client"
              },
              "preview_image": {
                "type": "string",
                "format": "binary",
                "nullable": true
              },
              "is_active": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
              },
              "identifier": {
                "type": "string",
                "readOnly": true,
                "description": "this is a string which identifies the element on the remote service."
              },
              "is_queryable": {
                "type": "boolean",
                "readOnly": true,
                "description": "flag to signal if this layer provides factual information or not. Parsed from capabilities."
              },
              "is_opaque": {
                "type": "boolean",
                "readOnly": true,
                "description": "flag to signal if this layer support transparency content or not. Parsed from capabilities."
              },
              "is_cascaded": {
                "type": "boolean",
                "readOnly": true,
                "description": "WMS cascading allows to expose layers coming from other WMS servers as if they were local layers"
              },
              "scale_min": {
                "type": "number",
                "readOnly": true,
                "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
              },
              "scale_max": {
                "type": "number",
                "readOnly": true,
                "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
              },
              "lft": {
                "type": "integer",
                "readOnly": true
              },
              "rght": {
                "type": "integer",
                "readOnly": true
              },
              "tree_id": {
                "type": "integer",
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "readOnly": true
              }
            },
            "required": [
              "bbox_lat_lon",
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "styles": {
                "$ref": "#/components/schemas/reltomany"
              },
              "keywords": {
                "$ref": "#/components/schemas/reltomany"
              },
              "service": {
                "$ref": "#/components/schemas/reltoone"
              },
              "parent": {
                "$ref": "#/components/schemas/reltoone"
              },
              "reference_systems": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "MetadataContact": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the organization",
                "maxLength": 256
              },
              "person_name": {
                "type": "string",
                "maxLength": 200
              },
              "email": {
                "type": "string",
                "format": "email",
                "maxLength": 100
              },
              "phone": {
                "type": "string",
                "maxLength": 100
              },
              "facsimile": {
                "type": "string",
                "maxLength": 100
              },
              "city": {
                "type": "string",
                "maxLength": 100
              },
              "postal_code": {
                "type": "string",
                "maxLength": 100
              },
              "address_type": {
                "type": "string",
                "maxLength": 100
              },
              "address": {
                "type": "string",
                "maxLength": 100
              },
              "state_or_province": {
                "type": "string",
                "maxLength": 100
              },
              "country": {
                "type": "string",
                "maxLength": 100
              }
            }
          }
        }
      },
      "Keyword": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "keyword": {
                "type": "string",
                "maxLength": 255
              }
            },
            "required": [
              "keyword"
            ]
          }
        }
      },
      "Style": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "The style's Name is used in the Map request STYLES parameter to lookup the style on server side."
              },
              "title": {
                "type": "string",
                "readOnly": true,
                "description": "The Title is a human-readable string as an alternative for the name attribute."
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "layer": {
                "$ref": "#/components/schemas/reltoone"
              }
            }
          }
        }
      },
      "WebFeatureService": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true
              },
              "xml_backup_file": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field."
              },
              "access_constraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource."
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource."
              },
              "use_limitation": {
                "type": "string",
                "nullable": true
              },
              "license_source_note": {
                "type": "string",
                "nullable": true
              },
              "date_stamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used."
              },
              "file_identifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml."
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from."
              },
              "origin_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata."
              },
              "is_broken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO"
              },
              "is_customized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True"
              },
              "insufficient_quality": {
                "type": "string",
                "nullable": true,
                "description": "TODO"
              },
              "is_searchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client"
              },
              "is_active": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
              },
              "version": {
                "type": "string",
                "readOnly": true,
                "description": "the version of the service type as sem version"
              },
              "service_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the base url of the service",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "get_capabilities_url": {
                "type": "string",
                "format": "uri",
                "description": "the capabilities url of the ogc service",
                "maxLength": 4096,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              }
            },
            "required": [
              "title",
              "get_capabilities_url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "featuretypes": {
                "$ref": "#/components/schemas/reltomany"
              },
              "licence": {
                "$ref": "#/components/schemas/reltoone"
              },
              "service_contact": {
                "$ref": "#/components/schemas/reltoone"
              },
              "metadata_contact": {
                "$ref": "#/components/schemas/reltoone"
              },
              "keywords": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "FeatureType": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true
              },
              "xml_backup_file": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field."
              },
              "date_stamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used."
              },
              "file_identifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml."
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from."
              },
              "origin_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata."
              },
              "is_broken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO"
              },
              "is_customized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True"
              },
              "insufficient_quality": {
                "type": "string",
                "nullable": true,
                "description": "TODO"
              },
              "is_searchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client"
              },
              "is_active": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy."
              },
              "identifier": {
                "type": "string",
                "readOnly": true,
                "description": "this is a string which identifies the element on the remote service."
              },
              "bbox_lat_lon": {
                "type": "string",
                "readOnly": true,
                "description": "bounding box shall be supplied regardless of what CRS the map server may support, but it may be approximate if the data are not natively in geographic coordinates. The purpose of bounding box is to facilitate geographic searches without requiring coordinate transformations by the search engine."
              },
              "describe_feature_type_document": {
                "type": "string",
                "nullable": true,
                "description": "the fetched content of the download describe feature type document."
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "keywords": {
                "$ref": "#/components/schemas/reltomany"
              },
              "service": {
                "$ref": "#/components/schemas/reltoone"
              },
              "reference_systems": {
                "$ref": "#/components/schemas/reltomany"
              },
              "output_formats": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "MapContextDefault": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this map context",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the topic of this map context"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "map_context_layers": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "MapContextLayer": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "an identifying name for this map context layer",
                "maxLength": 1000
              },
              "title": {
                "type": "string",
                "nullable": true,
                "description": "a short descriptive title for this map context layer",
                "maxLength": 1000
              },
              "layer_scale_min": {
                "type": "number",
                "nullable": true,
                "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
              },
              "layer_scale_max": {
                "type": "number",
                "nullable": true,
                "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction."
              },
              "preview_image": {
                "type": "string",
                "format": "binary",
                "nullable": true,
                "description": "A preview image for the Map Context Layer"
              },
              "lft": {
                "type": "integer",
                "readOnly": true
              },
              "rght": {
                "type": "integer",
                "readOnly": true
              },
              "tree_id": {
                "type": "integer",
                "readOnly": true
              },
              "level": {
                "type": "integer",
                "readOnly": true
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "parent": {
                "$ref": "#/components/schemas/reltoone"
              },
              "map_context": {
                "$ref": "#/components/schemas/reltoone"
              },
              "dataset_metadata": {
                "$ref": "#/components/schemas/reltoone"
              },
              "rendering_layer": {
                "$ref": "#/components/schemas/reltoone"
              },
              "layer_style": {
                "$ref": "#/components/schemas/reltoone"
              },
              "selection_layer": {
                "$ref": "#/components/schemas/reltoone"
              }
            }
          }
        }
      },
      "DatasetMetadata": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true
              },
              "xml_backup_file": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field."
              },
              "access_constraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource."
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource."
              },
              "use_limitation": {
                "type": "string",
                "nullable": true
              },
              "license_source_note": {
                "type": "string",
                "nullable": true
              },
              "date_stamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used."
              },
              "file_identifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml."
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from."
              },
              "origin_url": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata."
              },
              "is_broken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO"
              },
              "is_customized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True"
              },
              "insufficient_quality": {
                "type": "string",
                "nullable": true,
                "description": "TODO"
              },
              "is_searchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client"
              },
              "spatial_res_type": {
                "enum": [
                  "groundDistance",
                  "scaleDenominator"
                ],
                "type": "string",
                "nullable": true,
                "description": "Ground resolution in meter or the equivalent scale."
              },
              "spatial_res_value": {
                "type": "number",
                "nullable": true,
                "description": "The value depending on the selected resolution type."
              },
              "format": {
                "enum": [
                  null,
                  "Database",
                  "Esri shape",
                  "CSV",
                  "GML",
                  "GeoTIFF"
                ],
                "nullable": true,
                "description": "The format in which the described dataset is stored."
              },
              "charset": {
                "enum": [
                  null,
                  "utf8"
                ],
                "nullable": true,
                "description": "The charset which is used by the stored data."
              },
              "inspire_top_consistence": {
                "type": "boolean",
                "description": "Flag to signal if the described data has a topologically consistence."
              },
              "preview_image": {
                "type": "string",
                "format": "binary",
                "nullable": true
              },
              "lineage_statement": {
                "type": "string",
                "nullable": true
              },
              "update_frequency_code": {
                "enum": [
                  "annually",
                  "asNeeded",
                  "biannually",
                  "irregular",
                  "notPlanned",
                  "unknown"
                ],
                "type": "string",
                "nullable": true
              },
              "bounding_geometry": {
                "type": "string",
                "nullable": true
              },
              "dataset_id": {
                "type": "string",
                "nullable": true,
                "description": "identifier of the remote data",
                "maxLength": 4096
              },
              "dataset_id_code_space": {
                "type": "string",
                "description": "code space for the given identifier",
                "maxLength": 4096
              },
              "inspire_interoperability": {
                "type": "boolean",
                "description": "flag to signal if this "
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "licence": {
                "$ref": "#/components/schemas/reltoone"
              },
              "dataset_contact": {
                "$ref": "#/components/schemas/reltoone"
              },
              "metadata_contact": {
                "$ref": "#/components/schemas/reltoone"
              },
              "keywords": {
                "$ref": "#/components/schemas/reltomany"
              },
              "reference_systems": {
                "$ref": "#/components/schemas/reltomany"
              },
              "self_pointing_layers": {
                "$ref": "#/components/schemas/reltomany"
              },
              "self_pointing_feature_types": {
                "$ref": "#/components/schemas/reltomany"
              },
              "self_pointing_catalouge_service": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true
              },
              "last_login": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "is_superuser": {
                "type": "boolean",
                "description": "Designates that this user has all permissions without explicitly assigning them."
              },
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "pattern": "^[\\w.@+-]+\\z",
                "maxLength": 150
              },
              "first_name": {
                "type": "string",
                "maxLength": 150
              },
              "last_name": {
                "type": "string",
                "maxLength": 150
              },
              "email": {
                "type": "string",
                "format": "email",
                "maxLength": 254
              },
              "is_staff": {
                "type": "boolean",
                "description": "Designates whether the user can log into this admin site."
              },
              "is_active": {
                "type": "boolean",
                "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
              },
              "date_joined": {
                "type": "string",
                "format": "date-time"
              },
              "confirmed_newsletter": {
                "type": "boolean"
              },
              "confirmed_survey": {
                "type": "boolean"
              },
              "confirmed_dsgvo": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "I understand and accept that my data will be automatically processed and securely stored, as it is stated in the general data protection regulation (GDPR)."
              }
            },
            "required": [
              "username"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "groups": {
                "$ref": "#/components/schemas/reltomany"
              },
              "user_permissions": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "Group": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 150
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "permissions": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "Organization": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 150
              },
              "person_name": {
                "type": "string",
                "nullable": true,
                "maxLength": 200
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "maxLength": 100
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "facsimile": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "city": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "postal_code": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "address_type": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "address": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "state_or_province": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "country": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Describe what this organization representing"
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "permissions": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "maxLength": 255
              },
              "codename": {
                "type": "string",
                "maxLength": 100
              }
            },
            "required": [
              "name",
              "codename"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "content_type": {
                "$ref": "#/components/schemas/reltoone"
              }
            }
          }
        }
      },
      "TaskResult": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "task_meta": {
                "type": "string",
                "readOnly": true
              },
              "result": {
                "type": "string",
                "readOnly": true
              },
              "task_id": {
                "type": "string",
                "description": "Celery ID for the Task that was run",
                "maxLength": 255
              },
              "task_name": {
                "type": "string",
                "nullable": true,
                "description": "Name of the Task which was run",
                "maxLength": 255
              },
              "task_args": {
                "type": "string",
                "nullable": true,
                "description": "JSON representation of the positional arguments used with the task"
              },
              "task_kwargs": {
                "type": "string",
                "nullable": true,
                "description": "JSON representation of the named arguments used with the task"
              },
              "status": {
                "enum": [
                  "FAILURE",
                  "PENDING",
                  "RECEIVED",
                  "RETRY",
                  "REVOKED",
                  "STARTED",
                  "SUCCESS"
                ],
                "type": "string",
                "description": "Current state of the task being run"
              },
              "worker": {
                "type": "string",
                "nullable": true,
                "description": "Worker that executes the task",
                "maxLength": 100
              },
              "content_type": {
                "type": "string",
                "description": "Content type of the result data",
                "maxLength": 128
              },
              "content_encoding": {
                "type": "string",
                "description": "The encoding used to save the task result data",
                "maxLength": 64
              },
              "date_created": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "Datetime field when the task result was created in UTC"
              },
              "date_done": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "Datetime field when the task was completed in UTC"
              },
              "traceback": {
                "type": "string",
                "nullable": true,
                "description": "Text of the traceback if the task generated one"
              }
            },
            "required": [
              "task_id",
              "content_type",
              "content_encoding"
            ]
          }
        }
      },
      "WebMapServiceCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "get_capabilities_url": {
                "type": "string",
                "format": "uri",
                "description": "the capabilities url of the ogc service",
                "maxLength": 4096,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "collect_metadata_records": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "get_capabilities_url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "owner": {
                "$ref": "#/components/schemas/reltoone"
              },
              "service_auth": {
                "$ref": "#/components/schemas/reltoone"
              }
            }
          }
        }
      },
      "WebFeatureServiceCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "get_capabilities_url": {
                "type": "string",
                "format": "uri",
                "description": "the capabilities url of the ogc service",
                "maxLength": 4096,
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z¡-\uffff0-9](?:[a-z¡-\uffff0-9-]{0,61}[a-z¡-\uffff0-9])?(?:\\.(?!-)[a-z¡-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z¡-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "collect_metadata_records": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "get_capabilities_url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "owner": {
                "$ref": "#/components/schemas/reltoone"
              },
              "service_auth": {
                "$ref": "#/components/schemas/reltoone"
              }
            }
          }
        }
      },
      "MapContextLayerMoveLayer": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "target": {
                "type": "integer"
              },
              "position": {
                "enum": [
                  "first-child",
                  "last-child",
                  "left",
                  "right"
                ],
                "type": "string"
              }
            },
            "required": [
              "target",
              "position"
            ]
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "pattern": "^[\\w.@+-]+\\z",
                "maxLength": 150
              },
              "password": {
                "type": "string",
                "maxLength": 128
              }
            },
            "required": [
              "username",
              "password"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "groups": {
                "$ref": "#/components/schemas/reltomany"
              }
            }
          }
        }
      },
      "Login": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "writeOnly": true
              }
            },
            "required": [
              "username",
              "password"
            ]
          }
        }
      },
      "Logout": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "include": {
        "name": "include",
        "in": "query",
        "description": "[list of included related resources](https://jsonapi.org/format/#fetching-includes)",
        "required": false,
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "[sparse fieldsets](https://jsonapi.org/format/#fetching-sparse-fieldsets).\nUse fields[\\<typename\\>]=field1,field2,...,fieldN",
        "required": false,
        "style": "deepObject",
        "schema": {
          "type": "object"
        },
        "explode": true
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)",
        "required": false,
        "style": "form",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}