{
  "openapi": "3.0.2",
  "info": {
    "title": "MrMap JSON:API",
    "version": "1.0.0",
    "description": "API for all things \u2026"
  },
  "paths": {
    "/api/v1/registry/wms/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/",
        "description": "Retrieves all registered Web Map Services",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebMapService"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/",
        "description": "Endpoint to register new Web Map Services",
        "parameters": [],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "WebMapService"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "getCapabilitiesUrl": {
                            "type": "string",
                            "format": "uri",
                            "description": "a valid get capabilities url.",
                            "title": "get capabilities url",
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          },
                          "collectMetadataRecords": {
                            "type": "boolean",
                            "default": true,
                            "description": "If checked, Mr. Map collects all related metadata documents after the registration task.",
                            "title": "collect metadata records"
                          }
                        },
                        "required": [
                          "getCapabilitiesUrl"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Organization"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "The selected organization grants all rights on the registered service.",
                            "title": "owner"
                          },
                          "serviceAuth": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapServiceAuthentication"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Optional authentication credentials to request the remote service.",
                            "title": "authentication credentials"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapServiceCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{id}/",
        "description": "Retrieve one specific Web Map Service by the given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{id}/",
        "description": "Endpoint to update some fields of a registered Web Map Service",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "WebMapService"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "accessConstraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource.",
                            "title": "Access constraints"
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource.",
                            "title": "Fees"
                          },
                          "useLimitation": {
                            "type": "string",
                            "nullable": true,
                            "title": "Use limitation"
                          },
                          "licenseSourceNote": {
                            "type": "string",
                            "nullable": true,
                            "title": "License source note"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "operationUrls": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebMapServiceOperationUrl"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "this are the urls to use for the ogc operations.",
                            "title": "operation urls"
                          },
                          "serviceContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Service contact"
                          },
                          "lastModifiedBy": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "User"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Last modified by"
                          },
                          "metadataContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Metadata contact"
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Keywords"
                          },
                          "layers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Layers"
                          },
                          "createdBy": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "User"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Created by"
                          },
                          "licence": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Licence"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Licence"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{id}/",
        "description": "Endpoint to remove a registered Web Map Service from the system",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service}/layers/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_service}/layers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_service}/layers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Layer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Layer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "bboxLatLon": {
                            "type": "string",
                            "description": "this is the spatial extent of the layer.",
                            "title": "bbox"
                          },
                          "scaleMin": {
                            "type": "integer",
                            "description": "the minimum scale value.",
                            "title": "minimal scale"
                          },
                          "scaleMax": {
                            "type": "integer",
                            "description": "the maximum scale value.",
                            "title": "maximum scale"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "title": "Preview image"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "keywords help to find layers by matching keywords.",
                            "title": "keywords"
                          },
                          "referenceSystems": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "ReferenceSystem"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "available reference systems of this layer.",
                            "title": "reference systems"
                          },
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the web map service, where this layer is part of.",
                            "title": "web map service"
                          },
                          "styles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Style"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "related styles of this layer.",
                            "title": "styles"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the ancestor of this layer.",
                            "title": "Parent layer"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_service}/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContact"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MetadataContact"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "title": "Name",
                            "maxLength": 256
                          },
                          "personName": {
                            "type": "string",
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "maxLength": 100
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MetadataContact"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "title": "Name",
                            "maxLength": 256
                          },
                          "personName": {
                            "type": "string",
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "maxLength": 100
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_service_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContact"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MetadataContact"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "title": "Name",
                            "maxLength": 256
                          },
                          "personName": {
                            "type": "string",
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "maxLength": 100
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MetadataContact"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "title": "Name",
                            "maxLength": 256
                          },
                          "personName": {
                            "type": "string",
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "maxLength": 100
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_metadata_contact_webmapservice_metadata}/service-contact/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_metadata_contact_webmapservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_ogcservice_metadata}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_ogcservice_metadata",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/": {
      "get": {
        "operationId": "List/api/v1/registry/layers/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/layers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Layer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/layers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Layer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "bboxLatLon": {
                            "type": "string",
                            "description": "this is the spatial extent of the layer.",
                            "title": "bbox"
                          },
                          "scaleMin": {
                            "type": "integer",
                            "description": "the minimum scale value.",
                            "title": "minimal scale"
                          },
                          "scaleMax": {
                            "type": "integer",
                            "description": "the maximum scale value.",
                            "title": "maximum scale"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "title": "Preview image"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "keywords help to find layers by matching keywords.",
                            "title": "keywords"
                          },
                          "referenceSystems": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "ReferenceSystem"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "available reference systems of this layer.",
                            "title": "reference systems"
                          },
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the web map service, where this layer is part of.",
                            "title": "web map service"
                          },
                          "styles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Style"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "related styles of this layer.",
                            "title": "styles"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the ancestor of this layer.",
                            "title": "Parent layer"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/layers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Layer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/styles/": {
      "get": {
        "operationId": "List/api/v1/registry/layers/{parent_lookup_layer}/styles/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/layers/{parent_lookup_layer}/styles/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Style"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Style"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the layer for that this style is for.",
                            "title": "Related layer"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/layers/{parent_lookup_layer}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/layers/{parent_lookup_layer}/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/layers/{parent_lookup_layer}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/layers/{parent_lookup_layer}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_layer",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/": {
      "get": {
        "operationId": "List/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_secured_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_secured_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "AllowedWebMapServiceOperation"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "allowedArea": {
                            "type": "string",
                            "title": "Allowed area"
                          },
                          "description": {
                            "type": "string",
                            "description": "a short description what this allowed operation controls.",
                            "title": "Description",
                            "maxLength": 512
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "allowedGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Allowed groups"
                          },
                          "securedService": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the service where some layers or feature types are secured of.",
                            "title": "Secured service"
                          },
                          "operations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebMapServiceOperation"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Operations"
                          },
                          "securedLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Select one or more layers. Note that all sub layers of a selected layer will also be secured.",
                            "title": "Secured layers"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_secured_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web map service operation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_secured_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web map service operation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "AllowedWebMapServiceOperation"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "allowedArea": {
                            "type": "string",
                            "title": "Allowed area"
                          },
                          "description": {
                            "type": "string",
                            "description": "a short description what this allowed operation controls.",
                            "title": "Description",
                            "maxLength": 512
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "allowedGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Allowed groups"
                          },
                          "securedService": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the service where some layers or feature types are secured of.",
                            "title": "Secured service"
                          },
                          "operations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebMapServiceOperation"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Operations"
                          },
                          "securedLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Select one or more layers. Note that all sub layers of a selected layer will also be secured.",
                            "title": "Secured layers"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{parent_lookup_secured_service}/allowed-wms-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_secured_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web map service operation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/": {
      "get": {
        "operationId": "List/api/v1/registry/wfs/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wfs/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebFeatureService"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wfs/",
        "description": "",
        "parameters": [],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "WebFeatureService"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "getCapabilitiesUrl": {
                            "type": "string",
                            "format": "uri",
                            "title": "Get capabilities url",
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          },
                          "collectMetadataRecords": {
                            "type": "boolean",
                            "default": true,
                            "title": "Collect metadata records"
                          }
                        },
                        "required": [
                          "getCapabilitiesUrl"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Organization"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Owner"
                          },
                          "serviceAuth": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebFeatureServiceAuthentication"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Service auth"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureServiceCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wfs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wfs/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wfs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "WebFeatureService"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "accessConstraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource.",
                            "title": "Access constraints"
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource.",
                            "title": "Fees"
                          },
                          "useLimitation": {
                            "type": "string",
                            "nullable": true,
                            "title": "Use limitation"
                          },
                          "licenseSourceNote": {
                            "type": "string",
                            "nullable": true,
                            "title": "License source note"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "featuretypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "FeatureType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Featuretypes"
                          },
                          "licence": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Licence"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Licence"
                          },
                          "serviceContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "This is the contact for the service provider.",
                            "title": "Service contact"
                          },
                          "metadataContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "This is the contact for the metadata information.",
                            "title": "Metadata contact"
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "all keywords which are related to the content of this metadata.",
                            "title": "Keywords"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wfs/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wfs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/": {
      "get": {
        "operationId": "List/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureType"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_service",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "FeatureType"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          },
                          "describeFeatureTypeDocument": {
                            "type": "string",
                            "nullable": true,
                            "description": "the fetched content of the download describe feature type document.",
                            "title": "Describe feature type"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Keywords"
                          },
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebFeatureService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the extras service where this element is part of",
                            "title": "Service"
                          },
                          "referenceSystems": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "ReferenceSystem"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "all reference systems which this element supports",
                            "title": "Reference systems"
                          },
                          "outputFormats": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "MimeType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "This is a list of MIME types indicating the output formats that may be generated for a feature type.  If this optional element is not specified, then all the result formats listed for the GetFeature operation are assumed to be supported. ",
                            "title": "Output formats"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/wfs/{parent_lookup_service}/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/": {
      "get": {
        "operationId": "List/api/v1/registry/featuretypes/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/featuretypes/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeatureType"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/featuretypes/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "FeatureType"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          },
                          "describeFeatureTypeDocument": {
                            "type": "string",
                            "nullable": true,
                            "description": "the fetched content of the download describe feature type document.",
                            "title": "Describe feature type"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Keywords"
                          },
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebFeatureService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the extras service where this element is part of",
                            "title": "Service"
                          },
                          "referenceSystems": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "ReferenceSystem"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "all reference systems which this element supports",
                            "title": "Reference systems"
                          },
                          "outputFormats": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "MimeType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "This is a list of MIME types indicating the output formats that may be generated for a feature type.  If this optional element is not specified, then all the result formats listed for the GetFeature operation are assumed to be supported. ",
                            "title": "Output formats"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/featuretypes/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FeatureType"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/featuretypes/{parent_lookup_featuretype}/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_featuretype",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/csw/": {
      "get": {
        "operationId": "List/api/v1/registry/csw/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/csw/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalougeService"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/csw/",
        "description": "",
        "parameters": [],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "CatalougeService"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "getCapabilitiesUrl": {
                            "type": "string",
                            "format": "uri",
                            "title": "Get capabilities url",
                            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
                          }
                        },
                        "required": [
                          "getCapabilitiesUrl"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Organization"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Owner"
                          },
                          "serviceAuth": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebFeatureServiceAuthentication"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Service auth"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CatalougeServiceCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/csw/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/csw/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this catalouge service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/csw/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CatalougeService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/csw/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this catalouge service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "CatalougeService"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "accessConstraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource.",
                            "title": "Access constraints"
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource.",
                            "title": "Fees"
                          },
                          "useLimitation": {
                            "type": "string",
                            "nullable": true,
                            "title": "Use limitation"
                          },
                          "licenseSourceNote": {
                            "type": "string",
                            "nullable": true,
                            "title": "License source note"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                            "title": "Is active?"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "licence": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Licence"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Licence"
                          },
                          "serviceContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "This is the contact for the service provider.",
                            "title": "Service contact"
                          },
                          "metadataContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "This is the contact for the metadata information.",
                            "title": "Metadata contact"
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "all keywords which are related to the content of this metadata.",
                            "title": "Keywords"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/csw/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CatalougeService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/csw/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this catalouge service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/harvesting/harvesting-jobs/": {
      "get": {
        "operationId": "List/api/v1/registry/harvesting/harvesting-jobs/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Harvesting"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/harvesting/harvesting-jobs/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HarvestingJob"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/harvesting/harvesting-jobs/",
        "description": "",
        "parameters": [],
        "tags": [
          "Harvesting"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "HarvestingJob"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "recordType": {
                            "enum": [
                              "dataset",
                              "service",
                              "tile",
                              "series"
                            ],
                            "type": "string",
                            "description": "the type of the record, which shall be harvested.",
                            "title": "Record type"
                          },
                          "stepSize": {
                            "type": "integer",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "title": "Step size"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "CatalougeService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the csw for that this job is running",
                            "title": "Service"
                          },
                          "newRecords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "DatasetMetadata"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "New records"
                          },
                          "existingRecords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "DatasetMetadata"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Existing records"
                          },
                          "updatedRecords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "DatasetMetadata"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Updated records"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HarvestingJob"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/harvesting/harvesting-jobs/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/harvesting/harvesting-jobs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this harvesting job.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Harvesting"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/harvesting/harvesting-jobs/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HarvestingJob"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/harvesting/harvesting-jobs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this harvesting job.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Harvesting"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "HarvestingJob"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "recordType": {
                            "enum": [
                              "dataset",
                              "service",
                              "tile",
                              "series"
                            ],
                            "type": "string",
                            "description": "the type of the record, which shall be harvested.",
                            "title": "Record type"
                          },
                          "stepSize": {
                            "type": "integer",
                            "maximum": 2147483647,
                            "minimum": -2147483648,
                            "title": "Step size"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "CatalougeService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the csw for that this job is running",
                            "title": "Service"
                          },
                          "newRecords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "DatasetMetadata"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "New records"
                          },
                          "existingRecords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "DatasetMetadata"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Existing records"
                          },
                          "updatedRecords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "DatasetMetadata"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Updated records"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/harvesting/harvesting-jobs/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HarvestingJob"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/harvesting/harvesting-jobs/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this harvesting job.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Harvesting"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/": {
      "get": {
        "operationId": "List/api/v1/registry/mapcontexts/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/mapcontexts/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MapContextDefault"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontexts/",
        "description": "",
        "parameters": [],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContext"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this map context",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "language": {
                            "enum": [
                              "de",
                              "en"
                            ],
                            "type": "string",
                            "description": "language of context document",
                            "title": "Language"
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the topic of this map context",
                            "title": "Abstract"
                          },
                          "pixelWidth": {
                            "type": "integer",
                            "maximum": 2147483647,
                            "nullable": true,
                            "title": "Pixel width",
                            "minimum": 0
                          },
                          "pixelHeight": {
                            "type": "integer",
                            "maximum": 2147483647,
                            "nullable": true,
                            "title": "Pixel height",
                            "minimum": 0
                          },
                          "mmPerPixel": {
                            "type": "number",
                            "nullable": true,
                            "title": "Mm per pixel"
                          },
                          "bbox": {
                            "type": "string",
                            "nullable": true,
                            "title": "Bbox"
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "mapContextLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "MapContextLayer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Map context layers"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextDefault"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontexts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontexts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextDefault"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/mapcontexts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContext"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this map context",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "language": {
                            "enum": [
                              "de",
                              "en"
                            ],
                            "type": "string",
                            "description": "language of context document",
                            "title": "Language"
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the topic of this map context",
                            "title": "Abstract"
                          },
                          "pixelWidth": {
                            "type": "integer",
                            "maximum": 2147483647,
                            "nullable": true,
                            "title": "Pixel width",
                            "minimum": 0
                          },
                          "pixelHeight": {
                            "type": "integer",
                            "maximum": 2147483647,
                            "nullable": true,
                            "title": "Pixel height",
                            "minimum": 0
                          },
                          "mmPerPixel": {
                            "type": "number",
                            "nullable": true,
                            "title": "Mm per pixel"
                          },
                          "bbox": {
                            "type": "string",
                            "nullable": true,
                            "title": "Bbox"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "mapContextLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "MapContextLayer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Map context layers"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/mapcontexts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextDefault"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontexts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/": {
      "get": {
        "operationId": "List/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MapContextLayer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContextLayer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "layerScaleMin": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale minimum value"
                          },
                          "layerScaleMax": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale maximum value"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer",
                            "title": "Preview image"
                          },
                          "renderingActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "selectionActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "title": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short description for this map context layer",
                            "title": "Description",
                            "maxLength": 1000
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "renderingLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for rendering.",
                            "title": "Rendering layer"
                          },
                          "layerStyle": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Style"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a style for rendering.",
                            "title": "Style"
                          },
                          "selectionLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for feature selection.",
                            "title": "Selection layer"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContextLayer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Parent"
                          },
                          "mapContext": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContext"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Map context"
                          },
                          "datasetMetadata": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "DatasetMetadata"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "You can use this field to pre filter possible Layer selection.",
                            "title": "Dataset Metadata"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContextLayer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "layerScaleMin": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale minimum value"
                          },
                          "layerScaleMax": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale maximum value"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer",
                            "title": "Preview image"
                          },
                          "renderingActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "selectionActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "title": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short description for this map context layer",
                            "title": "Description",
                            "maxLength": 1000
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "renderingLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for rendering.",
                            "title": "Rendering layer"
                          },
                          "layerStyle": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Style"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a style for rendering.",
                            "title": "Style"
                          },
                          "selectionLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for feature selection.",
                            "title": "Selection layer"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContextLayer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Parent"
                          },
                          "mapContext": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContext"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Map context"
                          },
                          "datasetMetadata": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "DatasetMetadata"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "You can use this field to pre filter possible Layer selection.",
                            "title": "Dataset Metadata"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/": {
      "get": {
        "operationId": "List/api/v1/registry/mapcontextlayers/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/mapcontextlayers/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MapContextLayer"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontextlayers/",
        "description": "",
        "parameters": [],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContextLayer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "layerScaleMin": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale minimum value"
                          },
                          "layerScaleMax": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale maximum value"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer",
                            "title": "Preview image"
                          },
                          "renderingActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "selectionActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "title": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short description for this map context layer",
                            "title": "Description",
                            "maxLength": 1000
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "renderingLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for rendering.",
                            "title": "Rendering layer"
                          },
                          "layerStyle": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Style"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a style for rendering.",
                            "title": "Style"
                          },
                          "selectionLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for feature selection.",
                            "title": "Selection layer"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContextLayer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Parent"
                          },
                          "mapContext": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContext"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Map context"
                          },
                          "datasetMetadata": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "DatasetMetadata"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "You can use this field to pre filter possible Layer selection.",
                            "title": "Dataset Metadata"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContextLayer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "layerScaleMin": {
                            "type": "number",
                            "nullable": true,
                            "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale minimum value"
                          },
                          "layerScaleMax": {
                            "type": "number",
                            "nullable": true,
                            "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                            "title": "Scale maximum value"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "description": "A preview image for the Map Context Layer",
                            "title": "Preview image"
                          },
                          "renderingActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "selectionActive": {
                            "type": "boolean",
                            "description": "should this offering be visible?",
                            "title": "Rendering active"
                          },
                          "title": {
                            "type": "string",
                            "description": "an identifying name for this map context layer",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "a short description for this map context layer",
                            "title": "Description",
                            "maxLength": 1000
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "renderingLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for rendering.",
                            "title": "Rendering layer"
                          },
                          "layerStyle": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Style"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a style for rendering.",
                            "title": "Style"
                          },
                          "selectionLayer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "Select a layer for feature selection.",
                            "title": "Selection layer"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContextLayer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Parent"
                          },
                          "mapContext": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MapContext"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Map context"
                          },
                          "datasetMetadata": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "DatasetMetadata"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "You can use this field to pre filter possible Layer selection.",
                            "title": "Dataset Metadata"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/mapcontextlayers/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontextlayers/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/keywords/": {
      "get": {
        "operationId": "List/api/v1/registry/keywords/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/keywords/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Keyword"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/keywords/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/keywords/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword]",
            "required": false,
            "in": "query",
            "description": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.icontains]",
            "required": false,
            "in": "query",
            "description": "keyword__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[keyword.contains]",
            "required": false,
            "in": "query",
            "description": "keyword__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Keyword"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "title": "Keyword",
                            "maxLength": 255
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/keywords/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Keyword"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/keywords/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this keyword.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/styles/": {
      "get": {
        "operationId": "List/api/v1/registry/styles/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/styles/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Style"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/styles/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/styles/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this style.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Style"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the layer for that this style is for.",
                            "title": "Related layer"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/styles/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Style"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/dataset-metadata/": {
      "get": {
        "operationId": "List/api/v1/registry/dataset-metadata/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/dataset-metadata/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DatasetMetadata"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/dataset-metadata/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "DatasetMetadata"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "accessConstraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource.",
                            "title": "Access constraints"
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource.",
                            "title": "Fees"
                          },
                          "useLimitation": {
                            "type": "string",
                            "nullable": true,
                            "title": "Use limitation"
                          },
                          "licenseSourceNote": {
                            "type": "string",
                            "nullable": true,
                            "title": "License source note"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "spatialResType": {
                            "enum": [
                              "groundDistance",
                              "scaleDenominator"
                            ],
                            "type": "string",
                            "nullable": true,
                            "description": "Ground resolution in meter or the equivalent scale.",
                            "title": "Resolution type"
                          },
                          "spatialResValue": {
                            "type": "number",
                            "nullable": true,
                            "description": "The value depending on the selected resolution type.",
                            "title": "Resolution value"
                          },
                          "format": {
                            "enum": [
                              null,
                              "Database",
                              "Esri shape",
                              "CSV",
                              "GML",
                              "GeoTIFF"
                            ],
                            "nullable": true,
                            "description": "The format in which the described dataset is stored.",
                            "title": "Format"
                          },
                          "charset": {
                            "enum": [
                              null,
                              "utf8"
                            ],
                            "nullable": true,
                            "description": "The charset which is used by the stored data.",
                            "title": "Charset"
                          },
                          "inspireTopConsistence": {
                            "type": "boolean",
                            "description": "Flag to signal if the described data has a topologically consistence.",
                            "title": "Inspire top consistence"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "title": "Preview image"
                          },
                          "lineageStatement": {
                            "type": "string",
                            "nullable": true,
                            "title": "Lineage statement"
                          },
                          "updateFrequencyCode": {
                            "enum": [
                              "annually",
                              "asNeeded",
                              "biannually",
                              "irregular",
                              "notPlanned",
                              "unknown"
                            ],
                            "type": "string",
                            "nullable": true,
                            "title": "Update frequency code"
                          },
                          "boundingGeometry": {
                            "type": "string",
                            "nullable": true,
                            "title": "Bounding geometry"
                          },
                          "datasetId": {
                            "type": "string",
                            "nullable": true,
                            "description": "identifier of the remote data",
                            "title": "Dataset id",
                            "maxLength": 4096
                          },
                          "datasetIdCodeSpace": {
                            "type": "string",
                            "description": "code space for the given identifier",
                            "title": "Dataset id code space",
                            "maxLength": 4096
                          },
                          "inspireInteroperability": {
                            "type": "boolean",
                            "description": "flag to signal if this ",
                            "title": "Inspire interoperability"
                          }
                        },
                        "required": [
                          "title"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "selfPointingLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Self pointing layers"
                          },
                          "metadataContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Metadata contact"
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Keywords"
                          },
                          "referenceSystems": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "ReferenceSystem"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Reference systems"
                          },
                          "selfPointingFeatureTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "FeatureType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Self pointing feature types"
                          },
                          "datasetContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Dataset contact"
                          },
                          "licence": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Licence"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Licence"
                          },
                          "selfPointingCatalougeService": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "CatalougeService"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "all services from which this dataset was harvested.",
                            "title": "Services"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DatasetMetadata"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/dataset-metadata/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/dataset-metadata/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this dataset metadata.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/dataset-metadata/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DatasetMetadata"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/dataset-metadata/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this dataset metadata.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "DatasetMetadata"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "accessConstraints": {
                            "type": "string",
                            "nullable": true,
                            "description": "access constraints for the given resource.",
                            "title": "Access constraints"
                          },
                          "fees": {
                            "type": "string",
                            "nullable": true,
                            "description": "Costs and of terms of use for the given resource.",
                            "title": "Fees"
                          },
                          "useLimitation": {
                            "type": "string",
                            "nullable": true,
                            "title": "Use limitation"
                          },
                          "licenseSourceNote": {
                            "type": "string",
                            "nullable": true,
                            "title": "License source note"
                          },
                          "title": {
                            "type": "string",
                            "description": "a short descriptive title for this metadata",
                            "title": "Title",
                            "maxLength": 1000
                          },
                          "abstract": {
                            "type": "string",
                            "nullable": true,
                            "description": "brief summary of the content of this metadata.",
                            "title": "Abstract"
                          },
                          "insufficientQuality": {
                            "type": "string",
                            "nullable": true,
                            "description": "TODO",
                            "title": "Insufficient quality"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "only searchable metadata will be returned from the search api",
                            "title": "Is searchable"
                          },
                          "spatialResType": {
                            "enum": [
                              "groundDistance",
                              "scaleDenominator"
                            ],
                            "type": "string",
                            "nullable": true,
                            "description": "Ground resolution in meter or the equivalent scale.",
                            "title": "Resolution type"
                          },
                          "spatialResValue": {
                            "type": "number",
                            "nullable": true,
                            "description": "The value depending on the selected resolution type.",
                            "title": "Resolution value"
                          },
                          "format": {
                            "enum": [
                              null,
                              "Database",
                              "Esri shape",
                              "CSV",
                              "GML",
                              "GeoTIFF"
                            ],
                            "nullable": true,
                            "description": "The format in which the described dataset is stored.",
                            "title": "Format"
                          },
                          "charset": {
                            "enum": [
                              null,
                              "utf8"
                            ],
                            "nullable": true,
                            "description": "The charset which is used by the stored data.",
                            "title": "Charset"
                          },
                          "inspireTopConsistence": {
                            "type": "boolean",
                            "description": "Flag to signal if the described data has a topologically consistence.",
                            "title": "Inspire top consistence"
                          },
                          "previewImage": {
                            "type": "string",
                            "format": "binary",
                            "nullable": true,
                            "title": "Preview image"
                          },
                          "lineageStatement": {
                            "type": "string",
                            "nullable": true,
                            "title": "Lineage statement"
                          },
                          "updateFrequencyCode": {
                            "enum": [
                              "annually",
                              "asNeeded",
                              "biannually",
                              "irregular",
                              "notPlanned",
                              "unknown"
                            ],
                            "type": "string",
                            "nullable": true,
                            "title": "Update frequency code"
                          },
                          "boundingGeometry": {
                            "type": "string",
                            "nullable": true,
                            "title": "Bounding geometry"
                          },
                          "datasetId": {
                            "type": "string",
                            "nullable": true,
                            "description": "identifier of the remote data",
                            "title": "Dataset id",
                            "maxLength": 4096
                          },
                          "datasetIdCodeSpace": {
                            "type": "string",
                            "description": "code space for the given identifier",
                            "title": "Dataset id code space",
                            "maxLength": 4096
                          },
                          "inspireInteroperability": {
                            "type": "boolean",
                            "description": "flag to signal if this ",
                            "title": "Inspire interoperability"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "selfPointingLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Self pointing layers"
                          },
                          "metadataContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Metadata contact"
                          },
                          "keywords": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Keyword"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Keywords"
                          },
                          "referenceSystems": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "ReferenceSystem"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Reference systems"
                          },
                          "selfPointingFeatureTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "FeatureType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Self pointing feature types"
                          },
                          "datasetContact": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "MetadataContact"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Dataset contact"
                          },
                          "licence": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Licence"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "title": "Licence"
                          },
                          "selfPointingCatalougeService": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "CatalougeService"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "all services from which this dataset was harvested.",
                            "title": "Services"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/dataset-metadata/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DatasetMetadata"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/dataset-metadata/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this dataset metadata.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/metadata-contacts/": {
      "get": {
        "operationId": "List/api/v1/registry/metadata-contacts/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/metadata-contacts/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MetadataContact"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/metadata-contacts/",
        "description": "",
        "parameters": [],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MetadataContact"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "title": "Name",
                            "maxLength": 256
                          },
                          "personName": {
                            "type": "string",
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "maxLength": 100
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/metadata-contacts/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/metadata-contacts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/metadata-contacts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/metadata-contacts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MetadataContact"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the organization",
                            "title": "Name",
                            "maxLength": 256
                          },
                          "personName": {
                            "type": "string",
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "maxLength": 100
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/metadata-contacts/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MetadataContact"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/metadata-contacts/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this metadata contact.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Metadata"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/wms-operations/": {
      "get": {
        "operationId": "List/api/v1/registry/security/wms-operations/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/security/wms-operations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebMapServiceOperation"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/wms-operations/{operation}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/security/wms-operations/{operation}/",
        "description": "",
        "parameters": [
          {
            "name": "operation",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this web map service operation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/security/wms-operations/{operation}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/wfs-operations/": {
      "get": {
        "operationId": "List/api/v1/registry/security/wfs-operations/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/security/wfs-operations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebFeatureServiceOperation"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/wfs-operations/{operation}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/security/wfs-operations/{operation}/",
        "description": "",
        "parameters": [
          {
            "name": "operation",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this web feature service operation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/security/wfs-operations/{operation}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebFeatureServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/allowed-wms-operations/": {
      "get": {
        "operationId": "List/api/v1/registry/security/allowed-wms-operations/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/security/allowed-wms-operations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/security/allowed-wms-operations/",
        "description": "",
        "parameters": [],
        "tags": [
          "SecurityProxy"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "AllowedWebMapServiceOperation"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "allowedArea": {
                            "type": "string",
                            "title": "Allowed area"
                          },
                          "description": {
                            "type": "string",
                            "description": "a short description what this allowed operation controls.",
                            "title": "Description",
                            "maxLength": 512
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "allowedGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Allowed groups"
                          },
                          "securedService": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the service where some layers or feature types are secured of.",
                            "title": "Secured service"
                          },
                          "operations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebMapServiceOperation"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Operations"
                          },
                          "securedLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Select one or more layers. Note that all sub layers of a selected layer will also be secured.",
                            "title": "Secured layers"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/allowed-wms-operations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/security/allowed-wms-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web map service operation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/security/allowed-wms-operations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/security/allowed-wms-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web map service operation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "AllowedWebMapServiceOperation"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "allowedArea": {
                            "type": "string",
                            "title": "Allowed area"
                          },
                          "description": {
                            "type": "string",
                            "description": "a short description what this allowed operation controls.",
                            "title": "Description",
                            "maxLength": 512
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "allowedGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Allowed groups"
                          },
                          "securedService": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the service where some layers or feature types are secured of.",
                            "title": "Secured service"
                          },
                          "operations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebMapServiceOperation"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Operations"
                          },
                          "securedLayers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Layer"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Select one or more layers. Note that all sub layers of a selected layer will also be secured.",
                            "title": "Secured layers"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/security/allowed-wms-operations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebMapServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/security/allowed-wms-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web map service operation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/allowed-wfs-operations/": {
      "get": {
        "operationId": "List/api/v1/registry/security/allowed-wfs-operations/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/security/allowed-wfs-operations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AllowedWebFeatureServiceOperation"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/security/allowed-wfs-operations/",
        "description": "",
        "parameters": [],
        "tags": [
          "SecurityProxy"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "AllowedWebFeatureServiceOperation"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "allowedArea": {
                            "type": "string",
                            "title": "Allowed area"
                          },
                          "description": {
                            "type": "string",
                            "description": "a short description what this allowed operation controls.",
                            "title": "Description",
                            "maxLength": 512
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "allowedGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Allowed groups"
                          },
                          "securedService": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebFeatureService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the service where some layers or feature types are secured of.",
                            "title": "Secured service"
                          },
                          "operations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebFeatureServiceOperation"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Operations"
                          },
                          "securedFeatureTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "FeatureType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Select one or more feature types.",
                            "title": "Secured feature types"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebFeatureServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/security/allowed-wfs-operations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/security/allowed-wfs-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web feature service operation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/security/allowed-wfs-operations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebFeatureServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/security/allowed-wfs-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web feature service operation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "AllowedWebFeatureServiceOperation"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "allowedArea": {
                            "type": "string",
                            "title": "Allowed area"
                          },
                          "description": {
                            "type": "string",
                            "description": "a short description what this allowed operation controls.",
                            "title": "Description",
                            "maxLength": 512
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "allowedGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Allowed groups"
                          },
                          "securedService": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebFeatureService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "the service where some layers or feature types are secured of.",
                            "title": "Secured service"
                          },
                          "operations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "WebFeatureServiceOperation"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Operations"
                          },
                          "securedFeatureTypes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "FeatureType"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Select one or more feature types.",
                            "title": "Secured feature types"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/security/allowed-wfs-operations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AllowedWebFeatureServiceOperation"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/security/allowed-wfs-operations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this allowed web feature service operation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityProxy"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/monitoring/wms-get-capabilities-result/": {
      "get": {
        "operationId": "List/api/v1/registry/monitoring/wms-get-capabilities-result/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/monitoring/wms-get-capabilities-result/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WMSGetCapabilitiesResult"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/monitoring/wms-get-capabilities-result/",
        "description": "",
        "parameters": [],
        "tags": [
          "Monitoring"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "WMSGetCapabilitiesResult"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "this is the service which shall be monitored",
                            "title": "Web map service"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WMSGetCapabilitiesResultCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/monitoring/wms-get-capabilities-result/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/monitoring/wms-get-capabilities-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this wms get capabilities result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/monitoring/wms-get-capabilities-result/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WMSGetCapabilitiesResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/monitoring/wms-get-capabilities-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this wms get capabilities result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "WMSGetCapabilitiesResult"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "taskResult": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "TaskResult"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "The result of the celery task",
                            "title": "Task Result"
                          },
                          "service": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "WebMapService"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "this is the service which shall be monitored",
                            "title": "Web map service"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/monitoring/wms-get-capabilities-result/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WMSGetCapabilitiesResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/monitoring/wms-get-capabilities-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this wms get capabilities result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/monitoring/layer-get-map-result/": {
      "get": {
        "operationId": "List/api/v1/registry/monitoring/layer-get-map-result/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/monitoring/layer-get-map-result/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LayerGetMapResult"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/monitoring/layer-get-map-result/",
        "description": "",
        "parameters": [],
        "tags": [
          "Monitoring"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "LayerGetMapResult"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "this is the layer which shall be monitored",
                            "title": "Layer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LayerGetMapResultCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/monitoring/layer-get-map-result/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/monitoring/layer-get-map-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this layer get map result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/monitoring/layer-get-map-result/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LayerGetMapResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/monitoring/layer-get-map-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this layer get map result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "LayerGetMapResult"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "taskResult": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "TaskResult"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "The result of the celery task",
                            "title": "Task Result"
                          },
                          "layer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "this is the layer which shall be monitored",
                            "title": "Layer"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/monitoring/layer-get-map-result/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LayerGetMapResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/monitoring/layer-get-map-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this layer get map result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/monitoring/layer-get-feature-info-result/": {
      "get": {
        "operationId": "List/api/v1/registry/monitoring/layer-get-feature-info-result/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/registry/monitoring/layer-get-feature-info-result/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LayerGetFeatureInfoResult"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/monitoring/layer-get-feature-info-result/",
        "description": "",
        "parameters": [],
        "tags": [
          "Monitoring"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "LayerGetFeatureInfoResult"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "layer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "this is the layer which shall be monitored",
                            "title": "Layer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LayerGetFeatureInfoResultCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/monitoring/layer-get-feature-info-result/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/registry/monitoring/layer-get-feature-info-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this layer get feature info result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/monitoring/layer-get-feature-info-result/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LayerGetFeatureInfoResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/registry/monitoring/layer-get-feature-info-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this layer get feature info result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "LayerGetFeatureInfoResult"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {}
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "taskResult": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "TaskResult"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "The result of the celery task",
                            "title": "Task Result"
                          },
                          "layer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              },
                              "type": {
                                "type": "string",
                                "description": "The related resource name",
                                "enum": [
                                  "Layer"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "type"
                            ],
                            "description": "this is the layer which shall be monitored",
                            "title": "Layer"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/registry/monitoring/layer-get-feature-info-result/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LayerGetFeatureInfoResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/monitoring/layer-get-feature-info-result/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this layer get feature info result.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Monitoring"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{layer_pk}/service": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{layer_pk}/service",
        "description": "Retrieve one specific Web Map Service by the given id",
        "parameters": [
          {
            "name": "layer_pk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title]",
            "required": false,
            "in": "query",
            "description": "title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.icontains]",
            "required": false,
            "in": "query",
            "description": "title__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[title.contains]",
            "required": false,
            "in": "query",
            "description": "title__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract]",
            "required": false,
            "in": "query",
            "description": "abstract",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.icontains]",
            "required": false,
            "in": "query",
            "description": "abstract__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[abstract.contains]",
            "required": false,
            "in": "query",
            "description": "abstract__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.contains]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.covers]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__covers",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.equals]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__equals",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[bboxLatLon.intersects]",
            "required": false,
            "in": "query",
            "description": "bbox_lat_lon__intersects",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{layer_pk}/service",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/WebMapService"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wms/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wms/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/wms/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wms/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web map service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/layers/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/layers/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/layers/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/layers/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebMapService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/wfs/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/wfs/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/wfs/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/wfs/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this web feature service.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/featuretypes/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/featuretypes/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this feature type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebFeatureService"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{id}relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontexts/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/registry/mapcontextlayers/{id}relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/": {
      "get": {
        "operationId": "List/api/v1/accounts/users/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/users/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/",
        "description": "",
        "parameters": [],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "User"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                            "title": "Username",
                            "pattern": "^[\\w.@+-]+\\z",
                            "maxLength": 150
                          },
                          "password": {
                            "type": "string",
                            "title": "Password",
                            "maxLength": 128
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "groups where this user shall be member of",
                            "title": "groups"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserCreate"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/users/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "User"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "title": "Last login"
                          },
                          "isSuperuser": {
                            "type": "boolean",
                            "description": "Designates that this user has all permissions without explicitly assigning them.",
                            "title": "Superuser status"
                          },
                          "username": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                            "title": "Username",
                            "pattern": "^[\\w.@+-]+\\z",
                            "maxLength": 150
                          },
                          "firstName": {
                            "type": "string",
                            "title": "First name",
                            "maxLength": 150
                          },
                          "lastName": {
                            "type": "string",
                            "title": "Last name",
                            "maxLength": 150
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "title": "Email address",
                            "maxLength": 254
                          },
                          "isStaff": {
                            "type": "boolean",
                            "description": "Designates whether the user can log into this admin site.",
                            "title": "Staff status"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                            "title": "Active"
                          },
                          "dateJoined": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Date joined"
                          },
                          "confirmedNewsletter": {
                            "type": "boolean",
                            "title": "I want to sign up for the newsletter"
                          },
                          "confirmedSurvey": {
                            "type": "boolean",
                            "title": "I want to participate in surveys"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Group"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "groups where this user is member of",
                            "title": "groups"
                          },
                          "userPermissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "description": "Specific permissions for this user.",
                            "title": "User permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/users/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/groups/": {
      "get": {
        "operationId": "List/api/v1/accounts/users/{parent_lookup_user}/groups/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/users/{parent_lookup_user}/groups/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/{parent_lookup_user}/groups/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Group"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Group"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{parent_lookup_user}/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/organizations/": {
      "get": {
        "operationId": "List/api/v1/accounts/users/{parent_lookup_user}/organizations/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userHasPerm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/users/{parent_lookup_user}/organizations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/{parent_lookup_user}/organizations/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Organization"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          },
                          "personName": {
                            "type": "string",
                            "nullable": true,
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "nullable": true,
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "nullable": true,
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "title": "Country",
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing",
                            "title": "Description"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userHasPerm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Organization"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          },
                          "personName": {
                            "type": "string",
                            "nullable": true,
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "nullable": true,
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "nullable": true,
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "title": "Country",
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing",
                            "title": "Description"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{parent_lookup_user}/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_user",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/groups/": {
      "get": {
        "operationId": "List/api/v1/accounts/groups/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/groups/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/groups/",
        "description": "",
        "parameters": [],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Group"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/groups/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Group"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/groups/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Group"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/groups/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this group.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/organizations/": {
      "get": {
        "operationId": "List/api/v1/accounts/organizations/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userHasPerm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/organizations/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/organizations/",
        "description": "",
        "parameters": [],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Organization"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          },
                          "personName": {
                            "type": "string",
                            "nullable": true,
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "nullable": true,
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "nullable": true,
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "title": "Country",
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing",
                            "title": "Description"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/organizations/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.contains]",
            "required": false,
            "in": "query",
            "description": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description]",
            "required": false,
            "in": "query",
            "description": "description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.icontains]",
            "required": false,
            "in": "query",
            "description": "description__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[description.contains]",
            "required": false,
            "in": "query",
            "description": "description__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[userHasPerm]",
            "required": false,
            "in": "query",
            "description": "user_has_perm",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partial_update/api/v1/accounts/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Organization"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "maxLength": 150
                          },
                          "personName": {
                            "type": "string",
                            "nullable": true,
                            "title": "Contact person",
                            "maxLength": 200
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "nullable": true,
                            "title": "E-Mail",
                            "maxLength": 100
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true,
                            "title": "Phone",
                            "maxLength": 100
                          },
                          "facsimile": {
                            "type": "string",
                            "nullable": true,
                            "title": "Facsimile",
                            "maxLength": 100
                          },
                          "city": {
                            "type": "string",
                            "nullable": true,
                            "title": "City",
                            "maxLength": 100
                          },
                          "postalCode": {
                            "type": "string",
                            "nullable": true,
                            "title": "Postal code",
                            "maxLength": 100
                          },
                          "addressType": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address type",
                            "maxLength": 100
                          },
                          "address": {
                            "type": "string",
                            "nullable": true,
                            "title": "Address",
                            "maxLength": 100
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "nullable": true,
                            "title": "State or province",
                            "maxLength": 100
                          },
                          "country": {
                            "type": "string",
                            "nullable": true,
                            "title": "Country",
                            "maxLength": 100
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Describe what this organization representing",
                            "title": "Description"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "properties": {
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The related resource name",
                                  "enum": [
                                    "Permission"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "type"
                              ]
                            },
                            "title": "Permissions"
                          }
                        }
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "stringRepresentation": {
                            "type": "string",
                            "readOnly": true,
                            "title": "String representation"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partial_update/api/v1/accounts/organizations/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/organizations/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this Organization.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/permissions/": {
      "get": {
        "operationId": "List/api/v1/accounts/permissions/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename]",
            "required": false,
            "in": "query",
            "description": "codename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename.icontains]",
            "required": false,
            "in": "query",
            "description": "codename__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/accounts/permissions/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Permission"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/permissions/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/permissions/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this permission.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "required": false,
            "in": "query",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name.icontains]",
            "required": false,
            "in": "query",
            "description": "name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename]",
            "required": false,
            "in": "query",
            "description": "codename",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[codename.icontains]",
            "required": false,
            "in": "query",
            "description": "codename__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/permissions/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Permission"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/users/{id}/relationships/{related_field}": {
      "get": {
        "operationId": "retrieve/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/accounts/users/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "partialUpdate/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partialUpdate/api/v1/accounts/users/{id}/relationships/{related_field}",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ResourceIdentifierObject"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "destroy/api/v1/accounts/users/{id}/relationships/{related_field}",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A UUID string identifying this User.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "related_field",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ResourceIdentifierObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "[OK](https://jsonapi.org/format/#crud-deleting-responses-200)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/onlymeta"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[no content](https://jsonapi.org/format/#crud-deleting-responses-204)"
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notify/task-results/": {
      "get": {
        "operationId": "List/api/v1/notify/task-results/",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "page[number]",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page[size]",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[taskName]",
            "required": false,
            "in": "query",
            "description": "task_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[taskName.icontains]",
            "required": false,
            "in": "query",
            "description": "task_name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[taskName.contains]",
            "required": false,
            "in": "query",
            "description": "task_name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status]",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string",
              "enum": [
                "FAILURE",
                "PENDING",
                "RECEIVED",
                "RETRY",
                "REVOKED",
                "STARTED",
                "SUCCESS"
              ]
            }
          },
          {
            "name": "filter[dateCreated]",
            "required": false,
            "in": "query",
            "description": "date_created",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[dateCreated.gt]",
            "required": false,
            "in": "query",
            "description": "date_created__gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[dateCreated.lt]",
            "required": false,
            "in": "query",
            "description": "date_created__lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[dateCreated.range]",
            "required": false,
            "in": "query",
            "description": "date_created__range",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": "List/api/v1/notify/task-results/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TaskResult"
                      }
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notify/task-results/{id}/": {
      "get": {
        "operationId": "retrieve/api/v1/notify/task-results/{id}/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this task result.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/include"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/sort"
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[taskName]",
            "required": false,
            "in": "query",
            "description": "task_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[taskName.icontains]",
            "required": false,
            "in": "query",
            "description": "task_name__icontains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[taskName.contains]",
            "required": false,
            "in": "query",
            "description": "task_name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[status]",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string",
              "enum": [
                "FAILURE",
                "PENDING",
                "RECEIVED",
                "RETRY",
                "REVOKED",
                "STARTED",
                "SUCCESS"
              ]
            }
          },
          {
            "name": "filter[dateCreated]",
            "required": false,
            "in": "query",
            "description": "date_created",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[dateCreated.gt]",
            "required": false,
            "in": "query",
            "description": "date_created__gt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[dateCreated.lt]",
            "required": false,
            "in": "query",
            "description": "date_created__lt",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[dateCreated.range]",
            "required": false,
            "in": "query",
            "description": "date_created__range",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[search]",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "api"
        ],
        "responses": {
          "200": {
            "description": "retrieve/api/v1/notify/task-results/{id}/",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TaskResult"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/move_to/": {
      "post": {
        "operationId": "move_to/api/v1/registry/mapcontexts/{parent_lookup_map_context}/mapcontextlayers/{id}/move_to/",
        "description": "",
        "parameters": [
          {
            "name": "parent_lookup_map_context",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContextLayer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "title": "Target"
                          },
                          "position": {
                            "enum": [
                              "first-child",
                              "last-child",
                              "left",
                              "right"
                            ],
                            "type": "string",
                            "title": "Position"
                          }
                        },
                        "required": [
                          "target",
                          "position"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayerMoveLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/mapcontextlayers/{id}/move_to/": {
      "post": {
        "operationId": "move_to/api/v1/registry/mapcontextlayers/{id}/move_to/",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this map context layer.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MapContext"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "MapContextLayer"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "title": "Target"
                          },
                          "position": {
                            "enum": [
                              "first-child",
                              "last-child",
                              "left",
                              "right"
                            ],
                            "type": "string",
                            "title": "Position"
                          }
                        },
                        "required": [
                          "target",
                          "position"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/MapContextLayerMoveLayer"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/login/": {
      "post": {
        "operationId": "create/api/v1/accounts/login/",
        "description": "",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Login"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "title": "username"
                          },
                          "password": {
                            "type": "string",
                            "writeOnly": true,
                            "title": "password"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Login"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/logout/": {
      "post": {
        "operationId": "create/api/v1/accounts/logout/",
        "description": "",
        "parameters": [],
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The related resource name",
                        "enum": [
                          "Logout"
                        ]
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-201). Assigned `id` and/or any other changes are in this response.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Logout"
                    },
                    "included": {
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "$ref": "#/components/schemas/resource"
                      }
                    },
                    "links": {
                      "description": "Link members related to primary data",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/links"
                        },
                        {
                          "$ref": "#/components/schemas/pagination"
                        }
                      ]
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/jsonapi"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/datum"
                }
              }
            }
          },
          "204": {
            "description": "[Created](https://jsonapi.org/format/#crud-creating-responses-204) with the supplied `id`. No other changes from what was POSTed."
          },
          "401": {
            "description": "not authorized",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "403": {
            "description": "[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "404": {
            "description": "[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          },
          "409": {
            "description": "[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/failure"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "jsonapi": {
        "type": "object",
        "description": "The server's implementation",
        "properties": {
          "version": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "additionalProperties": false
      },
      "resource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "attributes": {
            "type": "object"
          },
          "relationships": {
            "type": "object"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "link": {
        "oneOf": [
          {
            "description": "a string containing the link's URL",
            "type": "string",
            "format": "uri-reference"
          },
          {
            "type": "object",
            "required": [
              "href"
            ],
            "properties": {
              "href": {
                "description": "a string containing the link's URL",
                "type": "string",
                "format": "uri-reference"
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            }
          }
        ]
      },
      "links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        }
      },
      "reltoone": {
        "description": "a singular 'to-one' relationship",
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/relationshipLinks"
          },
          "data": {
            "$ref": "#/components/schemas/relationshipToOne"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "relationshipToOne": {
        "description": "reference to other resource in a to-one relationship",
        "anyOf": [
          {
            "$ref": "#/components/schemas/nulltype"
          },
          {
            "$ref": "#/components/schemas/linkage"
          }
        ]
      },
      "reltomany": {
        "description": "a multiple 'to-many' relationship",
        "type": "object",
        "properties": {
          "links": {
            "$ref": "#/components/schemas/relationshipLinks"
          },
          "data": {
            "$ref": "#/components/schemas/relationshipToMany"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "relationshipLinks": {
        "description": "optional references to other resource objects",
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "self": {
            "$ref": "#/components/schemas/link"
          },
          "related": {
            "$ref": "#/components/schemas/link"
          }
        }
      },
      "relationshipToMany": {
        "description": "An array of objects each containing the 'type' and 'id' for to-many relationships",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/linkage"
        },
        "uniqueItems": true
      },
      "ResourceIdentifierObject": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/relationshipToOne"
          },
          {
            "$ref": "#/components/schemas/relationshipToMany"
          }
        ]
      },
      "linkage": {
        "type": "object",
        "description": "the 'type' and 'id'",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "pagination": {
        "type": "object",
        "properties": {
          "first": {
            "$ref": "#/components/schemas/pageref"
          },
          "last": {
            "$ref": "#/components/schemas/pageref"
          },
          "prev": {
            "$ref": "#/components/schemas/pageref"
          },
          "next": {
            "$ref": "#/components/schemas/pageref"
          }
        }
      },
      "pageref": {
        "oneOf": [
          {
            "type": "string",
            "format": "uri-reference"
          },
          {
            "$ref": "#/components/schemas/nulltype"
          }
        ]
      },
      "failure": {
        "type": "object",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/errors"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/jsonapi"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          }
        }
      },
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/error"
        },
        "uniqueItems": true
      },
      "error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "type": "object",
            "properties": {
              "pointer": {
                "type": "string",
                "description": "A [JSON Pointer](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document [e.g. `/data` for a primary data object, or `/data/attributes/title` for a specific attribute."
              },
              "parameter": {
                "type": "string",
                "description": "A string indicating which query parameter caused the error."
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            }
          }
        }
      },
      "onlymeta": {
        "additionalProperties": false,
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "meta": {
        "type": "object",
        "additionalProperties": true
      },
      "datum": {
        "description": "singular item",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/resource"
          }
        }
      },
      "nulltype": {
        "type": "object",
        "nullable": true,
        "default": null
      },
      "type": {
        "type": "string",
        "description": "The [type](https://jsonapi.org/format/#document-resource-object-identification) member is used to describe resource objects that share common attributes and relationships."
      },
      "id": {
        "type": "string",
        "description": "Each resource object\u2019s type and id pair MUST [identify](https://jsonapi.org/format/#document-resource-object-identification) a single, unique resource."
      },
      "WebMapService": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WebMapService"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "isAccessible": {
                "type": "string",
                "readOnly": true,
                "title": "Is accessible"
              },
              "createdAt": {
                "type": "string",
                "readOnly": true,
                "title": "Created at"
              },
              "lastModifiedAt": {
                "type": "string",
                "readOnly": true,
                "title": "Last modified at"
              },
              "xmlBackupFile": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field.",
                "title": "Xml backup"
              },
              "accessConstraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource.",
                "title": "Access constraints"
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource.",
                "title": "Fees"
              },
              "useLimitation": {
                "type": "string",
                "nullable": true,
                "title": "Use limitation"
              },
              "licenseSourceNote": {
                "type": "string",
                "nullable": true,
                "title": "License source note"
              },
              "dateStamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used.",
                "title": "Date stamp"
              },
              "fileIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml.",
                "title": "File identifier"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from.",
                "title": "Origin"
              },
              "originUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "title": "Origin url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "title": "Title",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata.",
                "title": "Abstract"
              },
              "isBroken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO",
                "title": "Is broken"
              },
              "isCustomized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True",
                "title": "Is customized"
              },
              "insufficientQuality": {
                "type": "string",
                "nullable": true,
                "description": "TODO",
                "title": "Insufficient quality"
              },
              "isSearchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api",
                "title": "Is searchable"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client",
                "title": "Hits"
              },
              "isActive": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                "title": "Is active?"
              },
              "version": {
                "type": "string",
                "readOnly": true,
                "description": "the version of the service type as sem version",
                "title": "Version"
              },
              "serviceUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the base url of the service",
                "title": "Url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "operationUrls": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "WebMapServiceOperationUrl"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "this are the urls to use for the ogc operations.",
                "title": "operation urls"
              },
              "serviceContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Service contact"
              },
              "lastModifiedBy": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "User"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Last modified by"
              },
              "metadataContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Metadata contact"
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Keyword"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Keywords"
              },
              "layers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Layer"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Layers"
              },
              "createdBy": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "User"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Created by"
              },
              "licence": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Licence"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Licence"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "Layer": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Layer"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "bboxLatLon": {
                "type": "string",
                "description": "this is the spatial extent of the layer.",
                "title": "bbox"
              },
              "scaleMin": {
                "type": "integer",
                "description": "the minimum scale value.",
                "title": "minimal scale"
              },
              "scaleMax": {
                "type": "integer",
                "description": "the maximum scale value.",
                "title": "maximum scale"
              },
              "xmlBackupFile": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field.",
                "title": "Xml backup"
              },
              "dateStamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used.",
                "title": "Date stamp"
              },
              "fileIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml.",
                "title": "File identifier"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from.",
                "title": "Origin"
              },
              "originUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "title": "Origin url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "title": "Title",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata.",
                "title": "Abstract"
              },
              "isBroken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO",
                "title": "Is broken"
              },
              "isCustomized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True",
                "title": "Is customized"
              },
              "insufficientQuality": {
                "type": "string",
                "nullable": true,
                "description": "TODO",
                "title": "Insufficient quality"
              },
              "isSearchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api",
                "title": "Is searchable"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client",
                "title": "Hits"
              },
              "previewImage": {
                "type": "string",
                "format": "binary",
                "nullable": true,
                "title": "Preview image"
              },
              "isActive": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                "title": "Is active?"
              },
              "identifier": {
                "type": "string",
                "readOnly": true,
                "description": "this is a string which identifies the element on the remote service.",
                "title": "Identifier"
              },
              "isQueryable": {
                "type": "boolean",
                "readOnly": true,
                "description": "flag to signal if this layer provides factual information or not. Parsed from capabilities.",
                "title": "Is queryable"
              },
              "isOpaque": {
                "type": "boolean",
                "readOnly": true,
                "description": "flag to signal if this layer support transparency content or not. Parsed from capabilities.",
                "title": "Is opaque"
              },
              "isCascaded": {
                "type": "boolean",
                "readOnly": true,
                "description": "WMS cascading allows to expose layers coming from other WMS servers as if they were local layers",
                "title": "Is cascaded"
              },
              "lft": {
                "type": "integer",
                "readOnly": true,
                "title": "Lft"
              },
              "rght": {
                "type": "integer",
                "readOnly": true,
                "title": "Rght"
              },
              "treeId": {
                "type": "integer",
                "readOnly": true,
                "title": "Tree id"
              },
              "level": {
                "type": "integer",
                "readOnly": true,
                "title": "Level"
              }
            },
            "required": [
              "bboxLatLon",
              "scaleMin",
              "scaleMax",
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Keyword"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "keywords help to find layers by matching keywords.",
                "title": "keywords"
              },
              "referenceSystems": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "ReferenceSystem"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "available reference systems of this layer.",
                "title": "reference systems"
              },
              "service": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebMapService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the web map service, where this layer is part of.",
                "title": "web map service"
              },
              "styles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Style"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "related styles of this layer.",
                "title": "styles"
              },
              "parent": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the ancestor of this layer.",
                "title": "Parent layer"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "MetadataContact": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "MetadataContact"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "name": {
                "type": "string",
                "description": "The name of the organization",
                "title": "Name",
                "maxLength": 256
              },
              "personName": {
                "type": "string",
                "title": "Contact person",
                "maxLength": 200
              },
              "email": {
                "type": "string",
                "format": "email",
                "title": "E-Mail",
                "maxLength": 100
              },
              "phone": {
                "type": "string",
                "title": "Phone",
                "maxLength": 100
              },
              "facsimile": {
                "type": "string",
                "title": "Facsimile",
                "maxLength": 100
              },
              "city": {
                "type": "string",
                "title": "City",
                "maxLength": 100
              },
              "postalCode": {
                "type": "string",
                "title": "Postal code",
                "maxLength": 100
              },
              "addressType": {
                "type": "string",
                "title": "Address type",
                "maxLength": 100
              },
              "address": {
                "type": "string",
                "title": "Address",
                "maxLength": 100
              },
              "stateOrProvince": {
                "type": "string",
                "title": "State or province",
                "maxLength": 100
              },
              "country": {
                "type": "string",
                "title": "Country",
                "maxLength": 100
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "Keyword": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Keyword"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "keyword": {
                "type": "string",
                "title": "Keyword",
                "maxLength": 255
              }
            },
            "required": [
              "keyword"
            ]
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "Style": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Style"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "The style's Name is used in the Map request STYLES parameter to lookup the style on server side.",
                "title": "Name"
              },
              "title": {
                "type": "string",
                "readOnly": true,
                "description": "The Title is a human-readable string as an alternative for the name attribute.",
                "title": "Title"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "layer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the layer for that this style is for.",
                "title": "Related layer"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "AllowedWebMapServiceOperation": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "AllowedWebMapServiceOperation"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "allowedArea": {
                "type": "string",
                "title": "Allowed area"
              },
              "description": {
                "type": "string",
                "description": "a short description what this allowed operation controls.",
                "title": "Description",
                "maxLength": 512
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "allowedGroups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Group"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Allowed groups"
              },
              "securedService": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebMapService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the service where some layers or feature types are secured of.",
                "title": "Secured service"
              },
              "operations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "WebMapServiceOperation"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Operations"
              },
              "securedLayers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Layer"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "Select one or more layers. Note that all sub layers of a selected layer will also be secured.",
                "title": "Secured layers"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "WebFeatureService": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WebFeatureService"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "xmlBackupFile": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field.",
                "title": "Xml backup"
              },
              "accessConstraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource.",
                "title": "Access constraints"
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource.",
                "title": "Fees"
              },
              "useLimitation": {
                "type": "string",
                "nullable": true,
                "title": "Use limitation"
              },
              "licenseSourceNote": {
                "type": "string",
                "nullable": true,
                "title": "License source note"
              },
              "dateStamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used.",
                "title": "Date stamp"
              },
              "fileIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml.",
                "title": "File identifier"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from.",
                "title": "Origin"
              },
              "originUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "title": "Origin url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "title": "Title",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata.",
                "title": "Abstract"
              },
              "isBroken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO",
                "title": "Is broken"
              },
              "isCustomized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True",
                "title": "Is customized"
              },
              "insufficientQuality": {
                "type": "string",
                "nullable": true,
                "description": "TODO",
                "title": "Insufficient quality"
              },
              "isSearchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api",
                "title": "Is searchable"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client",
                "title": "Hits"
              },
              "isActive": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                "title": "Is active?"
              },
              "version": {
                "type": "string",
                "readOnly": true,
                "description": "the version of the service type as sem version",
                "title": "Version"
              },
              "serviceUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the base url of the service",
                "title": "Url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "featuretypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "FeatureType"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Featuretypes"
              },
              "licence": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Licence"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Licence"
              },
              "serviceContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "This is the contact for the service provider.",
                "title": "Service contact"
              },
              "metadataContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "This is the contact for the metadata information.",
                "title": "Metadata contact"
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Keyword"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "all keywords which are related to the content of this metadata.",
                "title": "Keywords"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "FeatureType": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "FeatureType"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "xmlBackupFile": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field.",
                "title": "Xml backup"
              },
              "dateStamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used.",
                "title": "Date stamp"
              },
              "fileIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml.",
                "title": "File identifier"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from.",
                "title": "Origin"
              },
              "originUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "title": "Origin url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "title": "Title",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata.",
                "title": "Abstract"
              },
              "isBroken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO",
                "title": "Is broken"
              },
              "isCustomized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True",
                "title": "Is customized"
              },
              "insufficientQuality": {
                "type": "string",
                "nullable": true,
                "description": "TODO",
                "title": "Insufficient quality"
              },
              "isSearchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api",
                "title": "Is searchable"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client",
                "title": "Hits"
              },
              "isActive": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                "title": "Is active?"
              },
              "identifier": {
                "type": "string",
                "readOnly": true,
                "description": "this is a string which identifies the element on the remote service.",
                "title": "Identifier"
              },
              "bboxLatLon": {
                "type": "string",
                "readOnly": true,
                "description": "bounding box shall be supplied regardless of what CRS the map server may support, but it may be approximate if the data are not natively in geographic coordinates. The purpose of bounding box is to facilitate geographic searches without requiring coordinate transformations by the search engine.",
                "title": "Bounding box"
              },
              "describeFeatureTypeDocument": {
                "type": "string",
                "nullable": true,
                "description": "the fetched content of the download describe feature type document.",
                "title": "Describe feature type"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "keywords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Keyword"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Keywords"
              },
              "service": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebFeatureService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the extras service where this element is part of",
                "title": "Service"
              },
              "referenceSystems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "ReferenceSystem"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "all reference systems which this element supports",
                "title": "Reference systems"
              },
              "outputFormats": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "MimeType"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "This is a list of MIME types indicating the output formats that may be generated for a feature type.  If this optional element is not specified, then all the result formats listed for the GetFeature operation are assumed to be supported. ",
                "title": "Output formats"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "CatalougeService": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "CatalougeService"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "xmlBackupFile": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field.",
                "title": "Xml backup"
              },
              "accessConstraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource.",
                "title": "Access constraints"
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource.",
                "title": "Fees"
              },
              "useLimitation": {
                "type": "string",
                "nullable": true,
                "title": "Use limitation"
              },
              "licenseSourceNote": {
                "type": "string",
                "nullable": true,
                "title": "License source note"
              },
              "dateStamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used.",
                "title": "Date stamp"
              },
              "fileIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml.",
                "title": "File identifier"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from.",
                "title": "Origin"
              },
              "originUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "title": "Origin url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "title": "Title",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata.",
                "title": "Abstract"
              },
              "isBroken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO",
                "title": "Is broken"
              },
              "isCustomized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True",
                "title": "Is customized"
              },
              "insufficientQuality": {
                "type": "string",
                "nullable": true,
                "description": "TODO",
                "title": "Insufficient quality"
              },
              "isSearchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api",
                "title": "Is searchable"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client",
                "title": "Hits"
              },
              "isActive": {
                "type": "boolean",
                "description": "Used to activate/deactivate the service. If it is deactivated, you cant request the service through the Mr. Map proxy.",
                "title": "Is active?"
              },
              "version": {
                "type": "string",
                "readOnly": true,
                "description": "the version of the service type as sem version",
                "title": "Version"
              },
              "serviceUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the base url of the service",
                "title": "Url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "licence": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Licence"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Licence"
              },
              "serviceContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "This is the contact for the service provider.",
                "title": "Service contact"
              },
              "metadataContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "This is the contact for the metadata information.",
                "title": "Metadata contact"
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Keyword"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "all keywords which are related to the content of this metadata.",
                "title": "Keywords"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "HarvestingJob": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "HarvestingJob"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "recordType": {
                "enum": [
                  "dataset",
                  "service",
                  "tile",
                  "series"
                ],
                "type": "string",
                "description": "the type of the record, which shall be harvested.",
                "title": "Record type"
              },
              "totalRecords": {
                "type": "integer",
                "readOnly": true,
                "description": "total count of records which will be harvested by this job",
                "title": "Total records"
              },
              "stepSize": {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": -2147483648,
                "title": "Step size"
              },
              "startedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "timestamp of start",
                "title": "Date started"
              },
              "doneAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "timestamp of done",
                "title": "Date done"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "service": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "CatalougeService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the csw for that this job is running",
                "title": "Service"
              },
              "newRecords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "DatasetMetadata"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "New records"
              },
              "existingRecords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "DatasetMetadata"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Existing records"
              },
              "updatedRecords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "DatasetMetadata"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Updated records"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "MapContextDefault": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "MapContext"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this map context",
                "title": "Title",
                "maxLength": 1000
              },
              "language": {
                "enum": [
                  "de",
                  "en"
                ],
                "type": "string",
                "description": "language of context document",
                "title": "Language"
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the topic of this map context",
                "title": "Abstract"
              },
              "pixelWidth": {
                "type": "integer",
                "maximum": 2147483647,
                "nullable": true,
                "title": "Pixel width",
                "minimum": 0
              },
              "pixelHeight": {
                "type": "integer",
                "maximum": 2147483647,
                "nullable": true,
                "title": "Pixel height",
                "minimum": 0
              },
              "mmPerPixel": {
                "type": "number",
                "nullable": true,
                "title": "Mm per pixel"
              },
              "bbox": {
                "type": "string",
                "nullable": true,
                "title": "Bbox"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "mapContextLayers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "MapContextLayer"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Map context layers"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "MapContextLayer": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "MapContextLayer"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "layerScaleMin": {
                "type": "number",
                "nullable": true,
                "description": "minimum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                "title": "Scale minimum value"
              },
              "layerScaleMax": {
                "type": "number",
                "nullable": true,
                "description": "maximum scale for a possible request to this layer. If the request is out of the given scope, the service will response with empty transparentimages. None value means no restriction.",
                "title": "Scale maximum value"
              },
              "previewImage": {
                "type": "string",
                "format": "binary",
                "nullable": true,
                "description": "A preview image for the Map Context Layer",
                "title": "Preview image"
              },
              "renderingActive": {
                "type": "boolean",
                "description": "should this offering be visible?",
                "title": "Rendering active"
              },
              "selectionActive": {
                "type": "boolean",
                "description": "should this offering be visible?",
                "title": "Rendering active"
              },
              "title": {
                "type": "string",
                "description": "an identifying name for this map context layer",
                "title": "Title",
                "maxLength": 1000
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "a short description for this map context layer",
                "title": "Description",
                "maxLength": 1000
              },
              "lft": {
                "type": "integer",
                "readOnly": true,
                "title": "Lft"
              },
              "rght": {
                "type": "integer",
                "readOnly": true,
                "title": "Rght"
              },
              "treeId": {
                "type": "integer",
                "readOnly": true,
                "title": "Tree id"
              },
              "level": {
                "type": "integer",
                "readOnly": true,
                "title": "Level"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "renderingLayer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "Select a layer for rendering.",
                "title": "Rendering layer"
              },
              "layerStyle": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Style"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "Select a style for rendering.",
                "title": "Style"
              },
              "selectionLayer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "Select a layer for feature selection.",
                "title": "Selection layer"
              },
              "parent": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MapContextLayer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Parent"
              },
              "mapContext": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MapContext"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Map context"
              },
              "datasetMetadata": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "DatasetMetadata"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "You can use this field to pre filter possible Layer selection.",
                "title": "Dataset Metadata"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "DatasetMetadata": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "DatasetMetadata"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "xmlBackupFile": {
                "type": "string",
                "format": "binary",
                "readOnly": true,
                "description": "the original xml as backup to restore the xml field.",
                "title": "Xml backup"
              },
              "accessConstraints": {
                "type": "string",
                "nullable": true,
                "description": "access constraints for the given resource.",
                "title": "Access constraints"
              },
              "fees": {
                "type": "string",
                "nullable": true,
                "description": "Costs and of terms of use for the given resource.",
                "title": "Fees"
              },
              "useLimitation": {
                "type": "string",
                "nullable": true,
                "title": "Use limitation"
              },
              "licenseSourceNote": {
                "type": "string",
                "nullable": true,
                "title": "License source note"
              },
              "dateStamp": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "date that the metadata was created. If this is a metadata record which is parsed from remote iso metadata, the date stamp of the remote iso metadata will be used.",
                "title": "Date stamp"
              },
              "fileIdentifier": {
                "type": "string",
                "readOnly": true,
                "description": "the parsed file identifier from the iso metadata xml (gmd:fileIdentifier) OR for example if it is a layer/featuretypethe uuid of the described layer/featuretype shall be used to identify the generated iso metadata xml.",
                "title": "File identifier"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Where the metadata record comes from.",
                "title": "Origin"
              },
              "originUrl": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "the url of the document where the information of this metadata record comes from",
                "title": "Origin url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "title": {
                "type": "string",
                "description": "a short descriptive title for this metadata",
                "title": "Title",
                "maxLength": 1000
              },
              "abstract": {
                "type": "string",
                "nullable": true,
                "description": "brief summary of the content of this metadata.",
                "title": "Abstract"
              },
              "isBroken": {
                "type": "boolean",
                "readOnly": true,
                "description": "TODO",
                "title": "Is broken"
              },
              "isCustomized": {
                "type": "boolean",
                "readOnly": true,
                "description": "If the metadata record is customized, this flag is True",
                "title": "Is customized"
              },
              "insufficientQuality": {
                "type": "string",
                "nullable": true,
                "description": "TODO",
                "title": "Insufficient quality"
              },
              "isSearchable": {
                "type": "boolean",
                "description": "only searchable metadata will be returned from the search api",
                "title": "Is searchable"
              },
              "hits": {
                "type": "integer",
                "readOnly": true,
                "description": "how many times this metadata was requested by a client",
                "title": "Hits"
              },
              "spatialResType": {
                "enum": [
                  "groundDistance",
                  "scaleDenominator"
                ],
                "type": "string",
                "nullable": true,
                "description": "Ground resolution in meter or the equivalent scale.",
                "title": "Resolution type"
              },
              "spatialResValue": {
                "type": "number",
                "nullable": true,
                "description": "The value depending on the selected resolution type.",
                "title": "Resolution value"
              },
              "format": {
                "enum": [
                  null,
                  "Database",
                  "Esri shape",
                  "CSV",
                  "GML",
                  "GeoTIFF"
                ],
                "nullable": true,
                "description": "The format in which the described dataset is stored.",
                "title": "Format"
              },
              "charset": {
                "enum": [
                  null,
                  "utf8"
                ],
                "nullable": true,
                "description": "The charset which is used by the stored data.",
                "title": "Charset"
              },
              "inspireTopConsistence": {
                "type": "boolean",
                "description": "Flag to signal if the described data has a topologically consistence.",
                "title": "Inspire top consistence"
              },
              "previewImage": {
                "type": "string",
                "format": "binary",
                "nullable": true,
                "title": "Preview image"
              },
              "lineageStatement": {
                "type": "string",
                "nullable": true,
                "title": "Lineage statement"
              },
              "updateFrequencyCode": {
                "enum": [
                  "annually",
                  "asNeeded",
                  "biannually",
                  "irregular",
                  "notPlanned",
                  "unknown"
                ],
                "type": "string",
                "nullable": true,
                "title": "Update frequency code"
              },
              "boundingGeometry": {
                "type": "string",
                "nullable": true,
                "title": "Bounding geometry"
              },
              "datasetId": {
                "type": "string",
                "nullable": true,
                "description": "identifier of the remote data",
                "title": "Dataset id",
                "maxLength": 4096
              },
              "datasetIdCodeSpace": {
                "type": "string",
                "description": "code space for the given identifier",
                "title": "Dataset id code space",
                "maxLength": 4096
              },
              "inspireInteroperability": {
                "type": "boolean",
                "description": "flag to signal if this ",
                "title": "Inspire interoperability"
              }
            },
            "required": [
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "selfPointingLayers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Layer"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Self pointing layers"
              },
              "metadataContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Metadata contact"
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Keyword"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Keywords"
              },
              "referenceSystems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "ReferenceSystem"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Reference systems"
              },
              "selfPointingFeatureTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "FeatureType"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Self pointing feature types"
              },
              "datasetContact": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "MetadataContact"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Dataset contact"
              },
              "licence": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Licence"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Licence"
              },
              "selfPointingCatalougeService": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "CatalougeService"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "all services from which this dataset was harvested.",
                "title": "Services"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "WebMapServiceOperation": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WebMapServiceOperation"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "operation": {
                "enum": [
                  "GetMap",
                  "GetFeatureInfo"
                ],
                "type": "string",
                "title": "Operation"
              }
            },
            "required": [
              "operation"
            ]
          }
        }
      },
      "WebFeatureServiceOperation": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WebFeatureServiceOperation"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "operation": {
                "enum": [
                  "GetFeature",
                  "Transaction"
                ],
                "type": "string",
                "title": "Operation"
              }
            },
            "required": [
              "operation"
            ]
          }
        }
      },
      "AllowedWebFeatureServiceOperation": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "AllowedWebFeatureServiceOperation"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "allowedArea": {
                "type": "string",
                "title": "Allowed area"
              },
              "description": {
                "type": "string",
                "description": "a short description what this allowed operation controls.",
                "title": "Description",
                "maxLength": 512
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "allowedGroups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Group"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Allowed groups"
              },
              "securedService": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebFeatureService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "the service where some layers or feature types are secured of.",
                "title": "Secured service"
              },
              "operations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "WebFeatureServiceOperation"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Operations"
              },
              "securedFeatureTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "FeatureType"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "Select one or more feature types.",
                "title": "Secured feature types"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "WMSGetCapabilitiesResult": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WMSGetCapabilitiesResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "statusCode": {
                "type": "integer",
                "readOnly": true,
                "description": "The http status code of the response",
                "title": "HTTP status code"
              },
              "errorMsg": {
                "type": "string",
                "readOnly": true,
                "description": "The error message of the http response or other error description",
                "title": "Error message"
              },
              "monitoredUri": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "This is the url which was monitored",
                "title": "Monitored uri",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "requestDuration": {
                "type": "string",
                "readOnly": true,
                "description": "elapsed time of the request",
                "title": "Request duration"
              },
              "needsUpdate": {
                "type": "boolean",
                "readOnly": true,
                "description": "signals if the ogc capabilities document has any changes",
                "title": "Needs update"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "taskResult": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "TaskResult"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "The result of the celery task",
                "title": "Task Result"
              },
              "service": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebMapService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "this is the service which shall be monitored",
                "title": "Web map service"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "LayerGetMapResult": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "LayerGetMapResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "statusCode": {
                "type": "integer",
                "readOnly": true,
                "description": "The http status code of the response",
                "title": "HTTP status code"
              },
              "errorMsg": {
                "type": "string",
                "readOnly": true,
                "description": "The error message of the http response or other error description",
                "title": "Error message"
              },
              "monitoredUri": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "This is the url which was monitored",
                "title": "Monitored uri",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "requestDuration": {
                "type": "string",
                "readOnly": true,
                "description": "elapsed time of the request",
                "title": "Request duration"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "taskResult": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "TaskResult"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "The result of the celery task",
                "title": "Task Result"
              },
              "layer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "this is the layer which shall be monitored",
                "title": "Layer"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "LayerGetFeatureInfoResult": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "LayerGetFeatureInfoResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "statusCode": {
                "type": "integer",
                "readOnly": true,
                "description": "The http status code of the response",
                "title": "HTTP status code"
              },
              "errorMsg": {
                "type": "string",
                "readOnly": true,
                "description": "The error message of the http response or other error description",
                "title": "Error message"
              },
              "monitoredUri": {
                "type": "string",
                "format": "uri",
                "readOnly": true,
                "description": "This is the url which was monitored",
                "title": "Monitored uri",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "requestDuration": {
                "type": "string",
                "readOnly": true,
                "description": "elapsed time of the request",
                "title": "Request duration"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "taskResult": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "TaskResult"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "The result of the celery task",
                "title": "Task Result"
              },
              "layer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "this is the layer which shall be monitored",
                "title": "Layer"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "User"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "readOnly": true,
                "title": "Id"
              },
              "lastLogin": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "title": "Last login"
              },
              "isSuperuser": {
                "type": "boolean",
                "description": "Designates that this user has all permissions without explicitly assigning them.",
                "title": "Superuser status"
              },
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "title": "Username",
                "pattern": "^[\\w.@+-]+\\z",
                "maxLength": 150
              },
              "firstName": {
                "type": "string",
                "title": "First name",
                "maxLength": 150
              },
              "lastName": {
                "type": "string",
                "title": "Last name",
                "maxLength": 150
              },
              "email": {
                "type": "string",
                "format": "email",
                "title": "Email address",
                "maxLength": 254
              },
              "isStaff": {
                "type": "boolean",
                "description": "Designates whether the user can log into this admin site.",
                "title": "Staff status"
              },
              "isActive": {
                "type": "boolean",
                "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                "title": "Active"
              },
              "dateJoined": {
                "type": "string",
                "format": "date-time",
                "title": "Date joined"
              },
              "confirmedNewsletter": {
                "type": "boolean",
                "title": "I want to sign up for the newsletter"
              },
              "confirmedSurvey": {
                "type": "boolean",
                "title": "I want to participate in surveys"
              },
              "confirmedDsgvo": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "I understand and accept that my data will be automatically processed and securely stored, as it is stated in the general data protection regulation (GDPR).",
                "title": "Confirmed dsgvo"
              }
            },
            "required": [
              "username"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Group"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "groups where this user is member of",
                "title": "groups"
              },
              "userPermissions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Permission"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "Specific permissions for this user.",
                "title": "User permissions"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "Group": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Group"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "name": {
                "type": "string",
                "title": "Name",
                "maxLength": 150
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "permissions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Permission"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Permissions"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "Organization": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Organization"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "name": {
                "type": "string",
                "title": "Name",
                "maxLength": 150
              },
              "personName": {
                "type": "string",
                "nullable": true,
                "title": "Contact person",
                "maxLength": 200
              },
              "email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "title": "E-Mail",
                "maxLength": 100
              },
              "phone": {
                "type": "string",
                "nullable": true,
                "title": "Phone",
                "maxLength": 100
              },
              "facsimile": {
                "type": "string",
                "nullable": true,
                "title": "Facsimile",
                "maxLength": 100
              },
              "city": {
                "type": "string",
                "nullable": true,
                "title": "City",
                "maxLength": 100
              },
              "postalCode": {
                "type": "string",
                "nullable": true,
                "title": "Postal code",
                "maxLength": 100
              },
              "addressType": {
                "type": "string",
                "nullable": true,
                "title": "Address type",
                "maxLength": 100
              },
              "address": {
                "type": "string",
                "nullable": true,
                "title": "Address",
                "maxLength": 100
              },
              "stateOrProvince": {
                "type": "string",
                "nullable": true,
                "title": "State or province",
                "maxLength": 100
              },
              "country": {
                "type": "string",
                "nullable": true,
                "title": "Country",
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Describe what this organization representing",
                "title": "Description"
              }
            },
            "required": [
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "permissions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Permission"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "title": "Permissions"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Permission"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "name": {
                "type": "string",
                "title": "Name",
                "maxLength": 255
              },
              "codename": {
                "type": "string",
                "title": "Codename",
                "maxLength": 100
              }
            },
            "required": [
              "name",
              "codename"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "contentType": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "ContentType"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Content type"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "stringRepresentation": {
                "type": "string",
                "readOnly": true,
                "title": "String representation"
              }
            }
          }
        }
      },
      "TaskResult": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "TaskResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true,
                "title": "ID"
              },
              "result": {
                "type": "string",
                "readOnly": true,
                "title": "Result"
              },
              "taskMeta": {
                "type": "string",
                "readOnly": true,
                "title": "Task meta"
              },
              "taskId": {
                "type": "string",
                "description": "Celery ID for the Task that was run",
                "title": "Task ID",
                "maxLength": 255
              },
              "taskName": {
                "type": "string",
                "nullable": true,
                "description": "Name of the Task which was run",
                "title": "Task Name",
                "maxLength": 255
              },
              "taskArgs": {
                "type": "string",
                "nullable": true,
                "description": "JSON representation of the positional arguments used with the task",
                "title": "Task Positional Arguments"
              },
              "taskKwargs": {
                "type": "string",
                "nullable": true,
                "description": "JSON representation of the named arguments used with the task",
                "title": "Task Named Arguments"
              },
              "status": {
                "enum": [
                  "FAILURE",
                  "PENDING",
                  "RECEIVED",
                  "RETRY",
                  "REVOKED",
                  "STARTED",
                  "SUCCESS"
                ],
                "type": "string",
                "description": "Current state of the task being run",
                "title": "Task State"
              },
              "worker": {
                "type": "string",
                "nullable": true,
                "description": "Worker that executes the task",
                "title": "Worker",
                "maxLength": 100
              },
              "contentType": {
                "type": "string",
                "description": "Content type of the result data",
                "title": "Result Content Type",
                "maxLength": 128
              },
              "contentEncoding": {
                "type": "string",
                "description": "The encoding used to save the task result data",
                "title": "Result Encoding",
                "maxLength": 64
              },
              "dateCreated": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "Datetime field when the task result was created in UTC",
                "title": "Created DateTime"
              },
              "dateDone": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "Datetime field when the task was completed in UTC",
                "title": "Completed DateTime"
              },
              "traceback": {
                "type": "string",
                "nullable": true,
                "description": "Text of the traceback if the task generated one",
                "title": "Traceback"
              }
            },
            "required": [
              "taskId",
              "contentType",
              "contentEncoding"
            ]
          }
        }
      },
      "WebMapServiceCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WebMapService"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "getCapabilitiesUrl": {
                "type": "string",
                "format": "uri",
                "description": "a valid get capabilities url.",
                "title": "get capabilities url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "collectMetadataRecords": {
                "type": "boolean",
                "default": true,
                "description": "If checked, Mr. Map collects all related metadata documents after the registration task.",
                "title": "collect metadata records"
              }
            },
            "required": [
              "getCapabilitiesUrl"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Organization"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "The selected organization grants all rights on the registered service.",
                "title": "owner"
              },
              "serviceAuth": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebMapServiceAuthentication"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "Optional authentication credentials to request the remote service.",
                "title": "authentication credentials"
              }
            }
          }
        }
      },
      "WebFeatureServiceCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WebFeatureService"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "getCapabilitiesUrl": {
                "type": "string",
                "format": "uri",
                "title": "Get capabilities url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              },
              "collectMetadataRecords": {
                "type": "boolean",
                "default": true,
                "title": "Collect metadata records"
              }
            },
            "required": [
              "getCapabilitiesUrl"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Organization"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Owner"
              },
              "serviceAuth": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebFeatureServiceAuthentication"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Service auth"
              }
            }
          }
        }
      },
      "CatalougeServiceCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "CatalougeService"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "getCapabilitiesUrl": {
                "type": "string",
                "format": "uri",
                "title": "Get capabilities url",
                "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
              }
            },
            "required": [
              "getCapabilitiesUrl"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Organization"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Owner"
              },
              "serviceAuth": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebFeatureServiceAuthentication"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "title": "Service auth"
              }
            }
          }
        }
      },
      "MapContextLayerMoveLayer": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "MapContextLayer"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "target": {
                "type": "integer",
                "title": "Target"
              },
              "position": {
                "enum": [
                  "first-child",
                  "last-child",
                  "left",
                  "right"
                ],
                "type": "string",
                "title": "Position"
              }
            },
            "required": [
              "target",
              "position"
            ]
          }
        }
      },
      "WMSGetCapabilitiesResultCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "WMSGetCapabilitiesResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "service": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "WebMapService"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "this is the service which shall be monitored",
                "title": "Web map service"
              }
            }
          }
        }
      },
      "LayerGetMapResultCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "LayerGetMapResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "layer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "this is the layer which shall be monitored",
                "title": "Layer"
              }
            }
          }
        }
      },
      "LayerGetFeatureInfoResultCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "LayerGetFeatureInfoResult"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "layer": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  },
                  "type": {
                    "type": "string",
                    "description": "The related resource name",
                    "enum": [
                      "Layer"
                    ]
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "description": "this is the layer which shall be monitored",
                "title": "Layer"
              }
            }
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "User"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "title": "Username",
                "pattern": "^[\\w.@+-]+\\z",
                "maxLength": 150
              },
              "password": {
                "type": "string",
                "title": "Password",
                "maxLength": 128
              }
            },
            "required": [
              "username",
              "password"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "type": {
                      "type": "string",
                      "description": "The related resource name",
                      "enum": [
                        "Group"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "description": "groups where this user shall be member of",
                "title": "groups"
              }
            }
          }
        }
      },
      "Login": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Login"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          },
          "attributes": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "title": "username"
              },
              "password": {
                "type": "string",
                "writeOnly": true,
                "title": "password"
              }
            },
            "required": [
              "username",
              "password"
            ]
          }
        }
      },
      "Logout": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The related resource name",
            "enum": [
              "Logout"
            ]
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "include": {
        "name": "include",
        "in": "query",
        "description": "[list of included related resources](https://jsonapi.org/format/#fetching-includes)",
        "required": false,
        "style": "form",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "[sparse fieldsets](https://jsonapi.org/format/#fetching-sparse-fieldsets).\nUse fields[\\<typename\\>]=field1,field2,...,fieldN",
        "required": false,
        "style": "deepObject",
        "schema": {
          "type": "object"
        },
        "explode": true
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)",
        "required": false,
        "style": "form",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}