# Generated by Django 3.2.9 on 2022-01-18 15:57

import logging

from django.apps import apps
from django.core.exceptions import FieldDoesNotExist
from django.db import migrations
from django.db.models import F

logger = logging.getLogger(__name__)


def exchange_fields_values(app, schema):
    MyModel = apps.get_model('registry', 'MapContextLayer')
    name_field = None
    title_field = None

    try:
        name_field = MyModel._meta.get_field('name')
        title_field = MyModel._meta.get_field('title')
    except FieldDoesNotExist:
        logger.warning('Model does not contain field "name" or field "title"')
        pass

    if name_field and title_field:
        # Titles are currently a small optional description. They will be covering the task of "name" and the title is a description.
        # So first, titles that are NULL, should be filled to avoid not-null constraint error when exchanging values.
        # They will be filled with the exact same value as names
        MyModel.objects.filter(title=None).update(title=F('name'))

        # now exchange the values between the columns
        MyModel.objects.all().update(title=F('name'), name=F('title'))

        # copy values from name to description
        MyModel.objects.all().update(description=F('name'))

        logger.warning('Changes made')
    else:
        logger.warning(
            'Changes were not made because both or one of "name" or "title" fields were not found ')


class Migration(migrations.Migration):

    dependencies = [
        ('registry', '0003_mapcontextlayer_description'),
    ]

    operations = [migrations.RunPython(exchange_fields_values)]
