# Generated by Django 3.1.7 on 2021-03-23 15:20

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('service', '0002_auto_20210323_1620'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('structure', '0002_auto_20210323_1620'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TemplateRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbose_name', models.CharField(help_text='The verbose name of the role', max_length=58, verbose_name='Verbose name')),
                ('description', models.TextField(help_text='Describe what permissions this role shall grant', verbose_name='Description')),
                ('permissions', models.ManyToManyField(related_name='role_set', to='auth.Permission')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerBasedTemplateRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Describe what permissions this role shall grant', verbose_name='Description')),
                ('based_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_roles_ownerbasedtemplaterole_concrete_template', to='guardian_roles.templaterole')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='real_organization_based_template_roles', to='structure.organization')),
                ('users', models.ManyToManyField(blank=True, help_text='The users this role belongs to. A user will get all permissions granted to each of their roles.', related_name='role_set', related_query_name='role', to=settings.AUTH_USER_MODEL, verbose_name='users')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectBasedTemplateRole',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('description', models.TextField(help_text='Describe what permissions this role shall grant', verbose_name='Description')),
                ('object_pk', models.CharField(max_length=255, verbose_name='object ID')),
                ('based_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guardian_roles_objectbasedtemplaterole_concrete_template', to='guardian_roles.templaterole')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
            bases=('auth.group', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='MetadataUserObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.metadata')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'permission', 'content_object')},
            },
        ),
        migrations.CreateModel(
            name='MetadataGroupObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.metadata')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
            ],
            options={
                'abstract': False,
                'unique_together': {('group', 'permission', 'content_object')},
            },
        ),
    ]
