# Generated by Django 3.1.8 on 2021-05-20 08:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('structure', '0002_auto_20210520_1018'),
        ('resourceNew', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='servicemetadata',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_servicemetadata_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='described_service',
            field=models.OneToOneField(help_text='choice the service you want to describe with this metadata', on_delete=django.db.models.deletion.CASCADE, related_name='service_metadata', related_query_name='service_metadata', to='resourceNew.service', verbose_name='described service'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='keywords',
            field=models.ManyToManyField(help_text='all keywords which are related to the content of this metadata.', related_name='servicemetadata_metadata', related_query_name='servicemetadata_metadata', to='resourceNew.Keyword', verbose_name='keywords'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_servicemetadata_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='licence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='resourceNew.licence'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='metadata_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='metadata_contact_service_metadata', related_query_name='metadata_contact_service_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_servicemetadata_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='servicemetadata',
            name='service_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='service_contact_service_metadata', related_query_name='service_contact_service_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AddField(
            model_name='service',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_service_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='service',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_service_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='service',
            name='operation_urls',
            field=models.ManyToManyField(editable=False, help_text='all possible operations which this service supports. Parsed from capabilities.', to='resourceNew.ServiceUrl', verbose_name='operation urls'),
        ),
        migrations.AddField(
            model_name='service',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_service_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.ForeignKey(editable=False, help_text='the concrete type and version of the service.', on_delete=django.db.models.deletion.RESTRICT, related_name='services', related_query_name='service', to='resourceNew.servicetype', verbose_name='service type'),
        ),
        migrations.AddField(
            model_name='remotemetadata',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='remotemetadata',
            name='mime_type',
            field=models.ForeignKey(help_text='the mime type of the the remote metadata', on_delete=django.db.models.deletion.RESTRICT, related_name='remote_metadata', related_query_name='remote_metadata', to='resourceNew.mimetype', verbose_name='mime type'),
        ),
        migrations.AddField(
            model_name='remotemetadata',
            name='service',
            field=models.ForeignKey(help_text='the service where this remote metadata is related to. This remote metadata was found in the GetCapabilites document of the related service.', on_delete=django.db.models.deletion.CASCADE, related_name='remote_metadata', related_query_name='remote_metadata', to='resourceNew.service', verbose_name='service'),
        ),
        migrations.AddConstraint(
            model_name='referencesystem',
            constraint=models.UniqueConstraint(fields=('code', 'prefix'), name='resourcenew_referencesystem_unique_code_prefix'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_layermetadata_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='described_resource',
            field=models.OneToOneField(help_text='choice the layer you want to describe with this metadata', on_delete=django.db.models.deletion.CASCADE, related_name='layer_metadata', related_query_name='layer_metadata', to='resourceNew.layer', verbose_name='described layer'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='dimensions',
            field=models.ManyToManyField(blank=True, related_name='layer_metadata', related_query_name='layer_metadata', to='resourceNew.Dimension', verbose_name='dimensions'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='keywords',
            field=models.ManyToManyField(help_text='all keywords which are related to the content of this metadata.', related_name='layermetadata_metadata', related_query_name='layermetadata_metadata', to='resourceNew.Keyword', verbose_name='keywords'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_layermetadata_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_layermetadata_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='layermetadata',
            name='reference_systems',
            field=models.ManyToManyField(blank=True, related_name='layer_metadata', related_query_name='layer_metadata', to='resourceNew.ReferenceSystem', verbose_name='reference systems'),
        ),
        migrations.AddField(
            model_name='layer',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_layer_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='layer',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_layer_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='layer',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_layer_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='layer',
            name='parent',
            field=mptt.fields.TreeForeignKey(editable=False, help_text='the ancestor of this layer.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', related_query_name='child', to='resourceNew.layer', verbose_name='parent layer'),
        ),
        migrations.AddField(
            model_name='layer',
            name='service',
            field=models.ForeignKey(editable=False, help_text='the main service where this layer is part of', on_delete=django.db.models.deletion.CASCADE, related_name='layers', related_query_name='layer', to='resourceNew.service', verbose_name='parent service'),
        ),
        migrations.AddField(
            model_name='harvestresult',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_harvestresult_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='harvestresult',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_harvestresult_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='harvestresult',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_harvestresult_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='featuretypemetadata',
            name='described_resource',
            field=models.OneToOneField(help_text='choice the feature type you want to describe with this metadata', on_delete=django.db.models.deletion.CASCADE, related_name='feature_type_metadata', related_query_name='feature_type_metadata', to='resourceNew.featuretype', verbose_name='described feature type'),
        ),
        migrations.AddField(
            model_name='featuretype',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_featuretype_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='featuretype',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_featuretype_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='featuretype',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_featuretype_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='featuretype',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_types', related_query_name='feature_type', to='resourceNew.service'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='created_by_user',
            field=models.ForeignKey(blank=True, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_datasetmetadata_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='dataset_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='dataset_contact_metadata', related_query_name='dataset_contact_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='keywords',
            field=models.ManyToManyField(help_text='all keywords which are related to the content of this metadata.', related_name='datasetmetadata_metadata', related_query_name='datasetmetadata_metadata', to='resourceNew.Keyword', verbose_name='keywords'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_datasetmetadata_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='licence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='resourceNew.licence'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='metadata_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='metadata_contact_metadata', related_query_name='metadata_contact_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcenew_datasetmetadata_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='reference_systems',
            field=models.ManyToManyField(blank=True, related_name='dataset_metadata', related_query_name='dataset_metadata', to='resourceNew.ReferenceSystem', verbose_name='reference systems'),
        ),
        migrations.AddConstraint(
            model_name='datasetmetadata',
            constraint=models.UniqueConstraint(fields=('origin_url', 'file_identifier'), name='resourcenew_datasetmetadata_unique_origin_url_file_identifier'),
        ),
    ]
