# Generated by Django 3.1.8 on 2021-05-27 09:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('resourceNew', '0017_auto_20210527_1022'),
    ]

    operations = [
        migrations.AlterField(
            model_name='datasetmetadata',
            name='dataset_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='dataset_contact_metadata', related_query_name='dataset_contact_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AlterField(
            model_name='datasetmetadata',
            name='metadata_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='metadata_contact_metadata', related_query_name='metadata_contact_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AlterField(
            model_name='servicemetadata',
            name='metadata_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='metadata_contact_service_metadata', related_query_name='metadata_contact_service_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.AlterField(
            model_name='servicemetadata',
            name='service_contact',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.RESTRICT, related_name='service_contact_service_metadata', related_query_name='service_contact_service_metadata', to='resourceNew.metadatacontact', verbose_name='contact'),
        ),
        migrations.CreateModel(
            name='DatasetMetadataRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(choices=[(None, '---'), ('visualizes', 'visualizes'), ('describes', 'describes'), ('harvestedThrough', 'harvestedThrough'), ('harvestedParent', 'harvestedParent'), ('publishedBy', 'publishedBy')], max_length=20)),
                ('internal', models.BooleanField(default=False)),
                ('origin', models.CharField(choices=[(None, '---'), ('Capabilities', 'Capabilities'), ('Upload', 'Upload'), ('Editor', 'Editor'), ('Catalogue', 'Catalogue')], max_length=20)),
                ('dataset_metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_metadata_relations', related_query_name='dataset_metadata_relation', to='resourceNew.datasetmetadata')),
                ('feature_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dataset_metadata_relations', related_query_name='dataset_metadata_relation', to='resourceNew.featuretype')),
                ('layer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dataset_metadata_relations', related_query_name='dataset_metadata_relation', to='resourceNew.layer')),
            ],
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='self_pointing_feature_types',
            field=models.ManyToManyField(blank=True, help_text='all feature types which are linking to this dataset metadata in there capabilities.', related_name='dataset_metadata', related_query_name='dataset_metadata', through='resourceNew.DatasetMetadataRelation', to='resourceNew.FeatureType', verbose_name='feature types'),
        ),
        migrations.AddField(
            model_name='datasetmetadata',
            name='self_pointing_layers',
            field=models.ManyToManyField(blank=True, help_text='all layers which are linking to this dataset metadata in there capabilities.', related_name='dataset_metadata', related_query_name='dataset_metadata', through='resourceNew.DatasetMetadataRelation', to='resourceNew.Layer', verbose_name='layers'),
        ),
    ]
