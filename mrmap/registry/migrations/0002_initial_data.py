# Generated by Django 3.2.9 on 2022-01-05 15:03

from django.db import migrations
from registry.enums.service import (SecureableWFSOperationEnum,
                                    SecureableWMSOperationEnum)


class Migration(migrations.Migration):

    dependencies = [
        ('registry', '0001_initial'),
    ]

    def create_wms_operations(apps, schema_editor):
        WebMapServiceOperation = apps.get_model(
            "registry", "WebMapServiceOperation")
        objs = []
        for key, value in SecureableWMSOperationEnum.choices:
            objs.append(WebMapServiceOperation(operation=key))
        WebMapServiceOperation.objects.bulk_create(objs=objs)

    def create_wfs_operations(apps, schema_editor):
        WebFeatureServiceOperation = apps.get_model(
            "registry", "WebFeatureServiceOperation")
        objs = []
        for key, value in SecureableWFSOperationEnum.choices:
            objs.append(WebFeatureServiceOperation(operation=key))
        WebFeatureServiceOperation.objects.bulk_create(objs=objs)

    def create_file_system_import_task(apps, schema_editor):
        from django_celery_beat.models import IntervalSchedule, PeriodicTask
        schedule, created = IntervalSchedule.objects.get_or_create(
            every=1,
            period=IntervalSchedule.MINUTES,
        )
        PeriodicTask.objects.create(
            interval=schedule,
            name="check for new metadata to import",
            task="registry.tasks.harvest.check_for_files_to_import"

        )

    operations = [
        migrations.RunPython(create_wms_operations),
        migrations.RunPython(create_wfs_operations),
        migrations.RunPython(create_file_system_import_task),
    ]
