# Generated by Django 4.1.7 on 2023-07-10 08:07

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registry', '0002_initial_data'),
    ]

    operations = [
        migrations.AlterField(
            model_name='catalogueservice',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='catalogueservice',
            name='version',
            field=models.CharField(choices=[('1.0.0', 'V 1 0 0'), ('1.1.0', 'V 1 1 0'), ('1.1.1', 'V 1 1 1'), ('1.3.0', 'V 1 3 0'), ('2.0.0', 'V 2 0 0'), ('2.0.2', 'V 2 0 2')], editable=False, help_text='the version of the service type as sem version', max_length=10, verbose_name='version'),
        ),
        migrations.AlterField(
            model_name='catalogueserviceauthentication',
            name='auth_type',
            field=models.CharField(choices=[('http_basic', 'Basic'), ('http_digest', 'Digest')], help_text='kind of authentication mechanism shall used.', max_length=100, verbose_name='authentication type'),
        ),
        migrations.AlterField(
            model_name='catalogueserviceoperationurl',
            name='method',
            field=models.CharField(choices=[('Get', 'Get'), ('Post', 'Post')], help_text='the http method you can perform for this url', max_length=10, verbose_name='http method'),
        ),
        migrations.AlterField(
            model_name='catalogueserviceoperationurl',
            name='operation',
            field=models.CharField(choices=[('GetCapabilities', 'Get Capabilities'), ('GetMap', 'Get Map'), ('GetFeatureInfo', 'Get Feature Info'), ('DescribeLayer', 'Describe Layer'), ('GetLegendGraphic', 'Get Legend Graphic'), ('GetStyles', 'Get Styles'), ('PutStyles', 'Put Styles'), ('GetFeature', 'Get Feature'), ('Transaction', 'Transaction'), ('LockFeature', 'Lock Feature'), ('DescribeFeatureType', 'Describe Feature Type'), ('GetFeatureWithLock', 'Get Feature With Lock'), ('GetGmlObject', 'Get Gml Object'), ('ListStoredQueries', 'List Stored Queries'), ('GetPropertyValue', 'Get Property Value'), ('DescribeStoredQueries', 'Describe Stored Queries'), ('GetRecords', 'Get Records'), ('DescribeRecord', 'Describe Record'), ('GetRecordById', 'Get Record By Id')], editable=False, help_text='the operation you can perform with this url.', max_length=30, verbose_name='operation'),
        ),
        migrations.AlterField(
            model_name='conformitycheckconfiguration',
            name='conformity_type',
            field=models.TextField(choices=[('internal', 'Internal'), ('etf', 'Etf')]),
        ),
        migrations.AlterField(
            model_name='datasetmetadata',
            name='charset',
            field=models.CharField(blank=True, choices=[('utf8', 'Utf8')], help_text='The charset which is used by the stored data.', max_length=10, null=True, verbose_name='charset'),
        ),
        migrations.AlterField(
            model_name='datasetmetadata',
            name='format',
            field=models.CharField(blank=True, choices=[('Database', 'Database'), ('Esri shape', 'Esri Shape'), ('CSV', 'Csv'), ('GML', 'Gml'), ('GeoTIFF', 'Geotiff')], help_text='The format in which the described dataset is stored.', max_length=20, null=True, verbose_name='format'),
        ),
        migrations.AlterField(
            model_name='datasetmetadata',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='datasetmetadataconformitycheckrun',
            name='report_type',
            field=models.TextField(choices=[('text/html', 'Html'), ('application/json', 'Json')]),
        ),
        migrations.AlterField(
            model_name='datasetmetadatarelation',
            name='origin',
            field=models.CharField(choices=[('Capabilities', 'Capabilities'), ('Upload', 'Upload'), ('Editor', 'Editor'), ('Catalogue', 'Catalogue')], help_text='determines where this relation was found or it is added by a user.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='datasetmetadatarelation',
            name='relation_type',
            field=models.CharField(choices=[('visualizes', 'Visualizes'), ('describes', 'Describes'), ('harvestedThrough', 'Harvested Through'), ('harvestedParent', 'Harvested Parent'), ('publishedBy', 'Published By')], max_length=20),
        ),
        migrations.AlterField(
            model_name='featuretype',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='featuretypeconformitycheckrun',
            name='report_type',
            field=models.TextField(choices=[('text/html', 'Html'), ('application/json', 'Json')]),
        ),
        migrations.AlterField(
            model_name='historicalcatalogueservice',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='historicalcatalogueservice',
            name='version',
            field=models.CharField(choices=[('1.0.0', 'V 1 0 0'), ('1.1.0', 'V 1 1 0'), ('1.1.1', 'V 1 1 1'), ('1.3.0', 'V 1 3 0'), ('2.0.0', 'V 2 0 0'), ('2.0.2', 'V 2 0 2')], editable=False, help_text='the version of the service type as sem version', max_length=10, verbose_name='version'),
        ),
        migrations.AlterField(
            model_name='historicalfeaturetype',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='historicallayer',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='historicalwebfeatureservice',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='historicalwebfeatureservice',
            name='version',
            field=models.CharField(choices=[('1.0.0', 'V 1 0 0'), ('1.1.0', 'V 1 1 0'), ('1.1.1', 'V 1 1 1'), ('1.3.0', 'V 1 3 0'), ('2.0.0', 'V 2 0 0'), ('2.0.2', 'V 2 0 2')], editable=False, help_text='the version of the service type as sem version', max_length=10, verbose_name='version'),
        ),
        migrations.AlterField(
            model_name='historicalwebmapservice',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='historicalwebmapservice',
            name='version',
            field=models.CharField(choices=[('1.0.0', 'V 1 0 0'), ('1.1.0', 'V 1 1 0'), ('1.1.1', 'V 1 1 1'), ('1.3.0', 'V 1 3 0'), ('2.0.0', 'V 2 0 0'), ('2.0.2', 'V 2 0 2')], editable=False, help_text='the version of the service type as sem version', max_length=10, verbose_name='version'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='layerconformitycheckrun',
            name='report_type',
            field=models.TextField(choices=[('text/html', 'Html'), ('application/json', 'Json')]),
        ),
        migrations.AlterField(
            model_name='referencesystem',
            name='prefix',
            field=models.CharField(choices=[('EPSG', 'Epsg')], default='EPSG', max_length=255),
        ),
        migrations.AlterField(
            model_name='rule',
            name='field_name',
            field=models.TextField(choices=[('title', 'Title'), ('abstract', 'Abstract'), ('access_constraints', 'Access Constraints'), ('keywords', 'Keywords'), ('formats', 'Formats'), ('reference_system', 'Reference System')]),
        ),
        migrations.AlterField(
            model_name='rule',
            name='operator',
            field=models.TextField(choices=[('>', 'Gt'), ('>=', 'Gte'), ('<', 'Lt'), ('<=', 'Lte'), ('==', 'Eq'), ('!=', 'Neq')]),
        ),
        migrations.AlterField(
            model_name='rule',
            name='property',
            field=models.TextField(choices=[('len', 'Len'), ('count', 'Count')]),
        ),
        migrations.AlterField(
            model_name='rule',
            name='threshold',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='webfeatureservice',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='webfeatureservice',
            name='version',
            field=models.CharField(choices=[('1.0.0', 'V 1 0 0'), ('1.1.0', 'V 1 1 0'), ('1.1.1', 'V 1 1 1'), ('1.3.0', 'V 1 3 0'), ('2.0.0', 'V 2 0 0'), ('2.0.2', 'V 2 0 2')], editable=False, help_text='the version of the service type as sem version', max_length=10, verbose_name='version'),
        ),
        migrations.AlterField(
            model_name='webfeatureserviceauthentication',
            name='auth_type',
            field=models.CharField(choices=[('http_basic', 'Basic'), ('http_digest', 'Digest')], help_text='kind of authentication mechanism shall used.', max_length=100, verbose_name='authentication type'),
        ),
        migrations.AlterField(
            model_name='webfeatureserviceoperation',
            name='operation',
            field=models.CharField(choices=[('GetFeature', 'Get Feature'), ('Transaction', 'Transaction')], max_length=30, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='webfeatureserviceoperationurl',
            name='method',
            field=models.CharField(choices=[('Get', 'Get'), ('Post', 'Post')], help_text='the http method you can perform for this url', max_length=10, verbose_name='http method'),
        ),
        migrations.AlterField(
            model_name='webfeatureserviceoperationurl',
            name='operation',
            field=models.CharField(choices=[('GetCapabilities', 'Get Capabilities'), ('GetMap', 'Get Map'), ('GetFeatureInfo', 'Get Feature Info'), ('DescribeLayer', 'Describe Layer'), ('GetLegendGraphic', 'Get Legend Graphic'), ('GetStyles', 'Get Styles'), ('PutStyles', 'Put Styles'), ('GetFeature', 'Get Feature'), ('Transaction', 'Transaction'), ('LockFeature', 'Lock Feature'), ('DescribeFeatureType', 'Describe Feature Type'), ('GetFeatureWithLock', 'Get Feature With Lock'), ('GetGmlObject', 'Get Gml Object'), ('ListStoredQueries', 'List Stored Queries'), ('GetPropertyValue', 'Get Property Value'), ('DescribeStoredQueries', 'Describe Stored Queries'), ('GetRecords', 'Get Records'), ('DescribeRecord', 'Describe Record'), ('GetRecordById', 'Get Record By Id')], editable=False, help_text='the operation you can perform with this url.', max_length=30, verbose_name='operation'),
        ),
        migrations.AlterField(
            model_name='webmapservice',
            name='origin',
            field=models.CharField(choices=[('capabilities', 'Capabilities'), ('iso metadata', 'Iso Metadata')], editable=False, help_text='Where the metadata record comes from.', max_length=20, verbose_name='origin'),
        ),
        migrations.AlterField(
            model_name='webmapservice',
            name='version',
            field=models.CharField(choices=[('1.0.0', 'V 1 0 0'), ('1.1.0', 'V 1 1 0'), ('1.1.1', 'V 1 1 1'), ('1.3.0', 'V 1 3 0'), ('2.0.0', 'V 2 0 0'), ('2.0.2', 'V 2 0 2')], editable=False, help_text='the version of the service type as sem version', max_length=10, verbose_name='version'),
        ),
        migrations.AlterField(
            model_name='webmapserviceauthentication',
            name='auth_type',
            field=models.CharField(choices=[('http_basic', 'Basic'), ('http_digest', 'Digest')], help_text='kind of authentication mechanism shall used.', max_length=100, verbose_name='authentication type'),
        ),
        migrations.AlterField(
            model_name='webmapserviceoperation',
            name='operation',
            field=models.CharField(choices=[('GetMap', 'Get Map'), ('GetFeatureInfo', 'Get Feature Info')], max_length=30, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='webmapserviceoperationurl',
            name='method',
            field=models.CharField(choices=[('Get', 'Get'), ('Post', 'Post')], help_text='the http method you can perform for this url', max_length=10, verbose_name='http method'),
        ),
        migrations.AlterField(
            model_name='webmapserviceoperationurl',
            name='operation',
            field=models.CharField(choices=[('GetCapabilities', 'Get Capabilities'), ('GetMap', 'Get Map'), ('GetFeatureInfo', 'Get Feature Info'), ('DescribeLayer', 'Describe Layer'), ('GetLegendGraphic', 'Get Legend Graphic'), ('GetStyles', 'Get Styles'), ('PutStyles', 'Put Styles'), ('GetFeature', 'Get Feature'), ('Transaction', 'Transaction'), ('LockFeature', 'Lock Feature'), ('DescribeFeatureType', 'Describe Feature Type'), ('GetFeatureWithLock', 'Get Feature With Lock'), ('GetGmlObject', 'Get Gml Object'), ('ListStoredQueries', 'List Stored Queries'), ('GetPropertyValue', 'Get Property Value'), ('DescribeStoredQueries', 'Describe Stored Queries'), ('GetRecords', 'Get Records'), ('DescribeRecord', 'Describe Record'), ('GetRecordById', 'Get Record By Id')], editable=False, help_text='the operation you can perform with this url.', max_length=30, verbose_name='operation'),
        ),
        migrations.AlterField(
            model_name='wmsconformitycheckrun',
            name='report_type',
            field=models.TextField(choices=[('text/html', 'Html'), ('application/json', 'Json')]),
        ),
    ]
