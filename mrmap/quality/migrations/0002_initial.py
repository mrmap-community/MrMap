# Generated by Django 3.2.4 on 2021-09-07 07:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('quality', '0001_initial'),
        ('structure', '0001_initial'),
        ('resourceNew', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='conformitycheckrun',
            name='created_by_user',
            field=models.ForeignKey(blank=True, editable=False, help_text='The user who has created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_conformitycheckrun_created_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='dataset_metadata',
            field=models.ForeignKey(blank=True, help_text='the dataset metadata targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.datasetmetadata', verbose_name='dataset metadata'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='feature_type',
            field=models.ForeignKey(blank=True, help_text='the feature type targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.featuretype', verbose_name='feature type'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='feature_type_metadata',
            field=models.ForeignKey(blank=True, help_text='the feature type metadata targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.featuretypemetadata', verbose_name='feature type metadata'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='last_modified_by',
            field=models.ForeignKey(blank=True, editable=False, help_text='The last user who has modified this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_conformitycheckrun_last_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Last modified by'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='layer',
            field=models.ForeignKey(blank=True, help_text='the layer targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.layer', verbose_name='layer'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='layer_metadata',
            field=models.ForeignKey(blank=True, help_text='the layer metadata targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.layermetadata', verbose_name='layer metadata'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='owned_by_org',
            field=models.ForeignKey(blank=True, editable=False, help_text='The organization which is the owner of this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_conformitycheckrun_owned_by_org', to='structure.organization', verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='service',
            field=models.ForeignKey(blank=True, help_text='the service targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.service', verbose_name='service'),
        ),
        migrations.AddField(
            model_name='conformitycheckrun',
            name='service_metadata',
            field=models.ForeignKey(blank=True, help_text='the service metadata targeted by this check', null=True, on_delete=django.db.models.deletion.CASCADE, to='resourceNew.servicemetadata', verbose_name='service metadata'),
        ),
        migrations.AddField(
            model_name='conformitycheckconfigurationinternal',
            name='mandatory_rule_sets',
            field=models.ManyToManyField(related_name='mandatory_rule_sets', to='quality.RuleSet'),
        ),
        migrations.AddField(
            model_name='conformitycheckconfigurationinternal',
            name='optional_rule_sets',
            field=models.ManyToManyField(blank=True, related_name='optional_rule_sets', to='quality.RuleSet'),
        ),
    ]
