# docker compose file for development useage
version: '3.8'
services:

  # Extend the existing postgis container with an accessible port for development purposes
  postgis:
#    command:
#      psql -U mrmap -c "drop database test_mrmap"
    ports:
      - 5555:5432

  pre-commit-check:
    build:
      context: ./mrmap
      dockerfile: ../docker/mrmap/Dockerfile
      args: 
        MRMAP_PRODUCTION: 'False'
    entrypoint: /opt/mrmap/.bash_scripts/wait_db.sh
    command:
      /bin/bash -c "/opt/mrmap/.bash_scripts/pre_commit_check.sh"
    hostname: "mrmap-test"
    volumes:
      - type: bind
        source: ./mrmap
        target: /opt/mrmap
    networks:
      - backend
    env_file:
      - ./.env.mrmap
    depends_on:
      - postgis
      - redis

  celery-default-worker:
    command: >
      /bin/bash -c "watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A MrMap worker -E -l DEBUG -n default -Q default"

  celery-download-worker:
    command: >
      /bin/bash -c "watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A MrMap worker -E -l DEBUG -n download -Q download_iso_metadata,download_described_elements,harvest"

  test:
    build:
      context: ./mrmap
      dockerfile: ../docker/mrmap/Dockerfile
      args: 
        MRMAP_PRODUCTION: 'False'
    entrypoint: /opt/mrmap/.bash_scripts/wait_db.sh
    command:
      /bin/bash -c "coverage run manage.py test && coverage xml -i -o behave-coverage-report.xml"
    hostname: "mrmap-test"
    volumes:
      - type: bind
        source: ./mrmap
        target: /opt/mrmap
    networks:
      - backend
    env_file:
      - ./.env.mrmap
    depends_on:
      - postgis
      - redis

  behave:
    build:
      context: ./mrmap
      dockerfile: ../docker/mrmap/Dockerfile
      args: 
        MRMAP_PRODUCTION: 'False'
    entrypoint: /opt/mrmap/.bash_scripts/wait_db.sh
    command:
      /bin/bash -c "coverage run manage.py behave"
    hostname: "mrmap-behave"
    volumes:
      - type: bind
        source: ./mrmap
        target: /opt/mrmap
    networks:
      - backend
    env_file:
      - ./.env.mrmap
    depends_on:
      - postgis
      - redis