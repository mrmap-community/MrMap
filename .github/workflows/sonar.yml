name: Sonar
on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  schedule:
    - cron: 0 16 * * *
jobs:
  sonarcloud:
    name: Sonar
    runs-on: ubuntu-20.04
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: mrmap
          POSTGRES_PASSWORD: mrmap
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Extract branch name
        uses: nelonoel/branch-name@v1.0.1
        id: extract_branch
      - name: Install System Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
          libssl-dev \
          libcurl4-openssl-dev \
          gdal-bin \
          postgresql \
          postgresql-client \
          postgis
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          pip3 install -r ./mrmap/requirements.txt
      - name: Run unit tests
        run: |
          echo $POSTGRES_HOST
          python ./mrmap/manage.py test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.branch.name=${env.BRANCH_NAME}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
