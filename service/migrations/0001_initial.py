# Generated by Django 2.1.7 on 2019-04-18 08:05

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('structure', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_DE', models.CharField(max_length=100, unique=True)),
                ('title_EN', models.CharField(max_length=100, unique=True)),
                ('description_DE', models.CharField(max_length=100, unique=True)),
                ('description_EN', models.CharField(max_length=100, unique=True)),
                ('is_inspire', models.BooleanField()),
                ('symbol', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField()),
                ('created', models.DateTimeField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='structure.User')),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_begin', models.DateTimeField()),
                ('time_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='KeywordToMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Keyword')),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.CharField(max_length=1000)),
                ('online_resource', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_person_position', models.CharField(max_length=100)),
                ('contact_organization', models.CharField(max_length=100)),
                ('address_type', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state_or_province', models.CharField(max_length=100)),
                ('post_code', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=100)),
                ('contact_email', models.CharField(max_length=100)),
                ('access_constraints', models.CharField(max_length=200, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_change', models.DateTimeField(null=True)),
                ('status', models.IntegerField(null=True)),
                ('last_harvest_successful', models.BooleanField(null=True)),
                ('last_harvest_exception', models.CharField(max_length=200, null=True)),
                ('export_to_csw', models.BooleanField(default=False)),
                ('spatial_res_type', models.CharField(max_length=100, null=True)),
                ('spatial_res_value', models.CharField(max_length=100, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_inspire_conform', models.BooleanField(default=False)),
                ('has_inspire_downloads', models.BooleanField(default=False)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(null=True, srid=4326)),
                ('bounding_geometry', django.contrib.gis.db.models.fields.GeometryField(null=True, srid=4326)),
                ('bbox', models.DecimalField(decimal_places=2, max_digits=4, null=True)),
                ('dimension', models.CharField(max_length=100, null=True)),
                ('authority_url', models.CharField(max_length=255, null=True)),
                ('identifier', models.CharField(max_length=255, null=True)),
                ('metadata_url', models.CharField(max_length=255, null=True)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='service.Keyword')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceSystemToMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Metadata')),
                ('reference_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.ReferenceSystem')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('availability', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('is_available', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=100)),
                ('specification', models.URLField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermsOfUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('symbol_url', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('is_open_data', models.BooleanField()),
                ('fees', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='structure.User')),
            ],
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service.Service')),
                ('identifier', models.CharField(max_length=500, null=True)),
                ('hits', models.IntegerField(default=0)),
                ('preview_image', models.CharField(max_length=100)),
                ('preview_extend', models.CharField(max_length=100)),
                ('preview_legend', models.CharField(max_length=100)),
                ('position', models.IntegerField(default=0)),
                ('is_queryable', models.BooleanField(default=False)),
                ('is_opaque', models.BooleanField(default=False)),
                ('is_cascaded', models.BooleanField(default=False)),
                ('scale_min', models.FloatField(default=0)),
                ('scale_max', models.FloatField(default=0)),
                ('bbox_lat_lon', models.CharField(default='{"minx":-90.0, "miny":-180.0, "maxx": 90.0, "maxy":180.0}', max_length=255)),
                ('parent_layer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='child_layer', to='service.Layer')),
            ],
            bases=('service.service',),
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service.Service')),
                ('type', models.CharField(max_length=100)),
            ],
            bases=('service.service',),
        ),
        migrations.AddField(
            model_name='termsofuse',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='service.Service'),
        ),
        migrations.AddField(
            model_name='service',
            name='categories',
            field=models.ManyToManyField(to='service.Category'),
        ),
        migrations.AddField(
            model_name='service',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='structure.Group'),
        ),
        migrations.AddField(
            model_name='service',
            name='published_for',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='structure.Organization'),
        ),
        migrations.AddField(
            model_name='service',
            name='servicetype',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='service.ServiceType'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='service.Service'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='terms_of_use',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='service.TermsOfUse'),
        ),
        migrations.AddField(
            model_name='keywordtometadata',
            name='metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Metadata'),
        ),
        migrations.AddField(
            model_name='layer',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='service.Service'),
        ),
    ]
