# docker compose file for productive useage
version: '3.8'
services:
  postgis:
    image: postgis/postgis:14-3.3-alpine
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
    networks:
      - mrmap-internal
    env_file:
      - ./docker/postgis/.db.env
  redis:
    image: library/redis:7.0.5-alpine
    volumes:
      - type: volume
        source: mem-db-data
        target: /data
    networks:
      - mrmap-internal
  mapserver:
    image: camptocamp/mapserver:7.6
    volumes:
      - type: bind
        source: ./docker/mapserver/mapfiles
        target: /etc/mapserver/mapfiles
      - type: bind
        source: ./docker/mapserver/shapefiles
        target: /etc/mapserver/shapefiles
    networks:
      - mrmap-internal
  nginx:
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    hostname: "mrmap-nginx"
    volumes:
      - type: bind
        source: ./docker/nginx/mrmap.conf
        target: /etc/nginx/conf.d/default.conf
      - type: volume
        source: frontend-static
        target: /var/www/mrmap/frontend
    networks:
      - mrmap-internal
    extra_hosts:
      - host.docker.internal:host-gateway
  nginx-prod:
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    hostname: "mrmap-nginx"
    volumes:
      - type: bind
        source: ./docker/nginx/mrmap.conf
        target: /etc/nginx/conf.d/default.conf
      - type: volume
        source: frontend-static
        target: /var/www/mrmap/frontend
    networks:
      - mrmap-internal
    extra_hosts:
      - host.docker.internal:host-gateway

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
      args:
        MRMAP_PRODUCTION: "True"
    tty: true # To support colorized log output.
    entrypoint: /opt/mrmap/.bash_scripts/entrypoint.sh
    command: /bin/bash -c "gunicorn -b 0.0.0.0:8001 -k uvicorn.workers.UvicornWorker --workers=4 --reload --log-level=info --timeout=0 MrMap.asgi:application"
    hostname: "mrmap-backend"
    volumes:
      - type: bind
        source: ./backend
        target: /opt/mrmap
      - type: volume
        source: backend-static
        target: /var/www/mrmap/backend
      - type: volume
        source: backend-media
        target: /var/mrmap/backend/media
      - type: volume
        source: backend-log
        target: /var/log/mrmap/backend
    networks:
      - mrmap-internal
    env_file:
      - docker/backend/.mrmap.env
    depends_on:
      - postgis
      - redis
      - mapserver

  celery-default-worker:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
      args:
        MRMAP_PRODUCTION: "True"
    command: >
      /bin/bash -c "celery -A MrMap worker -E -l INFO -n default -Q default"
    tty: true # To support colorized log output.
    hostname: "mrmap-celery-default-worker"
    volumes:
      - type: bind
        source: ./backend
        target: /opt/mrmap
      - type: volume
        source: backend-media
        target: /var/mrmap/backend/media
      - type: volume
        source: backend-log
        target: /var/log/mrmap/backend
    networks:
      - mrmap-internal
    env_file:
      - ./docker/backend/.mrmap.env
    depends_on:
      - postgis
      - redis

  celery-download-worker:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
      args:
        MRMAP_PRODUCTION: "True"
    command: >
      /bin/bash -c "celery -A MrMap worker -E -l INFO -n download -Q download"
    tty: true # To support colorized log output.
    hostname: "mrmap-celery-worker"
    volumes:
      - type: bind
        source: ./backend
        target: /opt/mrmap
      - type: volume
        source: backend-media
        target: /var/mrmap/backend/media
      - type: volume
        source: backend-log
        target: /var/log/mrmap/backend
    networks:
      - mrmap-internal
    env_file:
      - ./docker/backend/.mrmap.env
    depends_on:
      - postgis
      - redis

  celery-db-calc-worker:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
      args:
        MRMAP_PRODUCTION: "True"
    command: >
      /bin/bash -c "celery -A MrMap worker -E -l INFO -n db-calc -Q db-calc"
    tty: true # To support colorized log output.
    hostname: "mrmap-celery-worker"
    volumes:
      - type: bind
        source: ./backend
        target: /opt/mrmap
      - type: volume
        source: backend-media
        target: /var/mrmap/backend/media
      - type: volume
        source: backend-log
        target: /var/log/mrmap/backend
    networks:
      - mrmap-internal
    env_file:
      - ./docker/backend/.mrmap.env
    depends_on:
      - postgis
      - redis

volumes:
  frontend-static: null
  backend-static: null
  backend-media: null
  backend-log: null
  db-data: null
  mem-db-data:

    null
networks:
  mrmap-internal: null
