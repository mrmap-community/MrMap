# docker compose file for productive useage
version: '3.8'
services:
  postgis:
    image: mdillon/postgis:11-alpine
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
    networks:
      - backend
    env_file:
      - ./.env.db
  redis:
    image: library/redis:6.2-alpine
    volumes:
      - type: volume
        source: mem-db-data
        target: /data
    networks:
      - backend
  mapserver:
    image: camptocamp/mapserver:7.6
    volumes:
      - type: bind
        source: ./docker/mapserver/mapfiles
        target: /etc/mapserver
    networks:
      - backend
  nginx:
    build:
      context: ./mrmap
      dockerfile: ../docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./docker/nginx/mrmap.conf
        target: /etc/nginx/conf.d/default.conf
      - type: volume
        source: mrmap-static
        target: /var/www/mrmap/static
    networks:
      - frontend
    extra_hosts:
      - host.docker.internal:host-gateway
  #inspire-validator:
  #  build:
  #    context: ./docker/inspire-validator
  gunicorn:
    build:
      context: ./mrmap
      dockerfile: ../docker/mrmap/Dockerfile
    entrypoint: /opt/mrmap/.bash_scripts/entrypoint.sh
    command: 
      /bin/bash -c "gunicorn -b 0.0.0.0:8001 -k uvicorn.workers.UvicornWorker --workers=4 --reload --log-level=info --timeout=0 MrMap.asgi:application"
    hostname: "mrmap-gunicorn"
    volumes:
      - type: bind
        source: ./mrmap
        target: /opt/mrmap
      - type: volume
        source: mrmap-static
        target: /var/www/mrmap/static
      - type: volume
        source: mrmap-media
        target: /var/mrmap/media
      - type: volume
        source: mrmap-log
        target: /var/log/mrmap
    networks:
      - backend
      - frontend
    env_file:
      - ./.env.mrmap
    depends_on:
      - postgis
      - redis
      - mapserver
      - nginx
      #- inspire-validator
  celery-default-worker:
    build:
      context: ./mrmap
      dockerfile: ../docker/mrmap/Dockerfile
    command: >
      /bin/bash -c "celery -A MrMap worker -E -l INFO -n default -Q default"
    hostname: "mrmap-celery-default-worker"
    volumes:
      - type: bind
        source: ./mrmap
        target: /opt/mrmap
      - type: volume
        source: mrmap-media
        target: /var/mrmap/media
      - type: volume
        source: mrmap-log
        target: /var/log/mrmap
    networks:
      - backend
    env_file:
      - ./.env.mrmap
    depends_on:
      - postgis
      - redis    
  celery-download-worker:
    build:
      context: ./mrmap
      dockerfile: ../docker/mrmap/Dockerfile
    command: >
      /bin/bash -c "celery -A MrMap worker -E -l INFO -n download -Q download_iso_metadata,download_described_elements,harvest"
    hostname: "mrmap-celery-worker"
    volumes:
      - type: bind
        source: ./mrmap
        target: /opt/mrmap
      - type: volume
        source: mrmap-media
        target: /var/mrmap/media
      - type: volume
        source: mrmap-log
        target: /var/log/mrmap
    networks:
      - backend
    env_file:
      - ./.env.mrmap
    depends_on:
      - postgis
      - redis
    
volumes:
  mrmap-static:
  mrmap-media:
  mrmap-log:
  db-data:
  mem-db-data:

networks:
  frontend:
  backend:
